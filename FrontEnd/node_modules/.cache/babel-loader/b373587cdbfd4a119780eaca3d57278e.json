{"ast":null,"code":"var _jsxFileName = \"D:\\\\MyStuff\\\\George Brown\\\\Year 3\\\\2 Semester\\\\CAPSTONE PROJECT 02\\\\Github\\\\CapStone-FA\\\\FrontEnd\\\\src\\\\components\\\\Dashboards\\\\Detailed\\\\User\\\\Profile.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport \"../User/UserStyles.css\"; //Modal\n\nimport Modal from \"react-modal\";\nimport { useHistory } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Profile() {\n  _s();\n\n  const history = useHistory(); //user information\n\n  const [serverFname, setserverFname] = useState(\"\");\n  const [serverLname, setserverLname] = useState(\"\");\n  const [serverPhone, setserverPhone] = useState(\"\");\n  const [serverEmail, setserverEmail] = useState(\"\");\n  const [serverPassword, setserverPassword] = useState(\"\"); //card information\n\n  const [userCards, setuserCards] = useState([]); //catch userdata from the server\n\n  useEffect(() => {\n    const user = {\n      \"email\": localStorage.getItem(\"user\")\n    };\n    axios.post(\"http://localhost:8080/users/getuser\", user).then(res => {\n      const userData = res.data[0];\n      setserverFname(userData.first_name);\n      setserverLname(userData.last_name);\n      setserverPhone(userData.phone);\n      setserverEmail(userData.email);\n      setserverPassword(userData.password);\n    });\n  }, [serverFname, serverLname, serverPhone, serverEmail, serverPassword]); //catch user cards\n\n  useEffect(() => {\n    const user = {\n      \"email\": localStorage.getItem(\"user\")\n    };\n    axios.post(\"http://localhost:8080/cards\", user).then(res => {\n      const cardData = res.data;\n      console.log(cardData);\n      setuserCards([...cardData]);\n    });\n  }, []);\n  useEffect(e => {\n    console.log(userCards);\n    displayCards(); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [userCards]);\n\n  function handleCardTablesetActive(item) {\n    console.log(item._id);\n  }\n\n  function displayCards() {\n    if (userCards.length === 0) {\n      return /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"No cards to show\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Card Holder\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Expiry Month\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Expiry Year\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Card Number\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Security Code\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Card Status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Set Active\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this), //item => <li key={item}>{item}</li>\n        //item=><td>{item.card_holder}</td>\n        userCards.map(item => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: item.card_holder\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: item.cardexpiryMonth\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: item.cardexpiryYear\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: item.cardnumber\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: item.cardsec\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: item.cardstatus\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-primary\",\n              onClick: handleCardTablesetActive(item),\n              children: \"Set Active\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 41\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-primary\",\n              children: \"delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 41\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 37\n          }, this)]\n        }, item._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 33\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this);\n    }\n  } //use states:\n\n\n  const [fname, setFname] = useState(\"\");\n  const [lname, setLname] = useState(\"\");\n  const [phone, setPhone] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [repassword, setRepassword] = useState(\"\"); //card use state\n\n  const [cardHolderName, setCardHolderName] = useState(\"\");\n  const [cardNumber, setCardNumber] = useState(\"\");\n  const [cardExpMonth, setCardExpMonth] = useState(\"\");\n  const [cardExpYear, setCardExpYear] = useState(\"\");\n  const [cardSecCode, setcardSecCode] = useState(\"\"); //update profile MOdal\n\n  const [profilemodal, setProfilemodal] = useState(false);\n  const [addcardmodal, setAddcardmodal] = useState(false); //modal Errors\n\n  const [updateProfileModalError, setupdateProfileModalError] = useState(\"\");\n  const [cardModalError, setcardModalError] = useState(\"\"); //Modal functionality\n  //Profile Modal\n\n  const closeAndUpdateProfile = e => {\n    //do update changes  !!! \n    e.preventDefault();\n    const userToUpdate = {\n      \"first_name\": fname,\n      \"last_name\": lname,\n      \"phone\": phone,\n      \"email\": email,\n      \"password\": password,\n      \"authlevel\": \"user\"\n    };\n    const currentEmail = serverEmail;\n\n    if (fname === \"\" || lname === \"\" || phone === \"\" || email === \"\" || password === \"\" || repassword === \"\") {\n      setupdateProfileModalError(\"Please Fill all fields\");\n    } else {\n      if (password === repassword) {\n        //do update here\n        axios.post(\"http://localhost:8080/users/update\", [userToUpdate, currentEmail]).then(res => {\n          const userData = res.data;\n          console.log(userData);\n          let errors = res.data.errors;\n          let errorReport = [];\n\n          for (const property in errors) {\n            console.log(`${property}: ${errors[property].message}`);\n            errorReport.push(`${property}: ${errors[property].message}`);\n          }\n\n          setupdateProfileModalError(errorReport);\n\n          if (errorReport.length === 0) {\n            //history.push('/')\n            setProfilemodal(false);\n            localStorage.clear();\n            history.push('/');\n          }\n        });\n      } else {\n        setupdateProfileModalError(\"Password does not match\");\n      }\n    } //include logout action with redirection to home page\n\n  };\n\n  function openToUpdateProfile() {\n    //catch user information and put them in the place holder !!!\n    //make re-password place holder empty\n    setProfilemodal(true);\n  } //card modal\n\n\n  const closeAddCard = e => {\n    //do update changes\n    e.preventDefault();\n    const card = {\n      cardstatus: \"Active\",\n      card_holder: cardHolderName,\n      cardnumber: cardNumber,\n      cardexpiryMonth: cardExpMonth,\n      cardexpiryYear: cardExpYear,\n      cardsec: cardSecCode,\n      email: serverEmail // holder_email: localStorage.getItem(\"user\")\n      // email: \"mikeadams@fadvishor.ca\"\n\n    };\n\n    if (cardHolderName === \"\" || cardNumber === \"\" || cardExpMonth === \"\" || cardExpYear === \"\" || cardSecCode === \"\") {\n      setcardModalError(\"Please Fill all Fields\");\n    } else {\n      axios.post('http://localhost:8080/card', card).then(res => {\n        console.log(res);\n        let errors = res.data.errors;\n        let errorReport = [];\n        console.log(`errors are here ${errors}`);\n\n        for (const property in errors) {\n          console.log(`${property}: ${errors[property].message}`);\n          errorReport.push(`${property}: ${errors[property].message}`);\n        }\n\n        setcardModalError(errorReport);\n\n        if (errorReport.length === 0) {\n          console.log(cardModalError);\n          setCardHolderName(\"\");\n          setCardNumber(\"\");\n          setCardExpMonth(\"\");\n          setCardExpYear(\"\");\n          setcardSecCode(\"\");\n          setAddcardmodal(false); // history.push('/dashboardUser')\n          // window.location.reload(false)\n        } else {\n          setcardModalError(\"something went wrong\");\n        }\n      }).catch(err => console.log(err));\n    }\n  };\n\n  function openAddCard() {\n    //catch user card information and put them in place holder and hide security number\n    setAddcardmodal(true);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"profile\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Hello from profile\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"myDiv\",\n        children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: `First Name: ${serverFname}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: `Last Name: ${serverLname}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: `Phone: ${serverPhone}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: `Email: ${serverEmail}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: `Password: ${serverPassword}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-primary\",\n          onClick: openToUpdateProfile,\n          children: \"Edit Profile\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"myDiv\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Cards\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: displayCards()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-primary\",\n          onClick: openAddCard,\n          children: \"Add Card\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Modal, {\n        isOpen: profilemodal,\n        onRequestClose: () => setProfilemodal(false),\n        style: {\n          overlay: {\n            backgroundColor: 'ActiveCaption'\n          },\n          content: {\n            color: 'MenuText',\n            width: '50%',\n            height: '50%',\n            top: '50%',\n            left: '50%',\n            right: 'auto',\n            bottom: 'auto',\n            marginRight: '-50%',\n            transform: 'translate(-50%, -50%)'\n          }\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-sm-6 offset-sm-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Update Profile\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 307,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"form-control\",\n            placeholder: serverFname,\n            onChange: e => setFname(e.target.value),\n            value: fname\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 308,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 308,\n            columnNumber: 154\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"form-control\",\n            placeholder: serverLname,\n            onChange: e => setLname(e.target.value),\n            value: lname\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 309,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 309,\n            columnNumber: 154\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"form-control\",\n            placeholder: serverPhone,\n            onChange: e => setPhone(e.target.value),\n            value: phone\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 310,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 310,\n            columnNumber: 154\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"form-control\",\n            placeholder: serverEmail,\n            onChange: e => setEmail(e.target.value),\n            value: email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 311,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 311,\n            columnNumber: 154\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            className: \"form-control\",\n            placeholder: serverPassword,\n            onChange: e => setPassword(e.target.value),\n            value: password\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 312,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 312,\n            columnNumber: 167\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            className: \"form-control\",\n            placeholder: \"Re-Password\",\n            onChange: e => setRepassword(e.target.value),\n            value: repassword\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 313,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 313,\n            columnNumber: 168\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: closeAndUpdateProfile,\n            className: \"btn btn-primary\",\n            children: \"Update\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 314,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 316,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: updateProfileModalError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 318,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal, {\n        isOpen: addcardmodal,\n        onRequestClose: () => setAddcardmodal(false),\n        style: {\n          overlay: {\n            backgroundColor: 'ActiveCaption'\n          },\n          content: {\n            color: 'MenuText',\n            width: '50%',\n            height: '50%',\n            top: '50%',\n            left: '50%',\n            right: 'auto',\n            bottom: 'auto',\n            marginRight: '-50%',\n            transform: 'translate(-50%, -50%)'\n          }\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Update Card\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 344,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          placeholder: \"Holder Name\",\n          onChange: e => setCardHolderName(e.target.value),\n          value: cardHolderName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 345,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 345,\n          columnNumber: 168\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          placeholder: \"Card Number\",\n          onChange: e => setCardNumber(e.target.value),\n          value: cardNumber\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 346,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 346,\n          columnNumber: 160\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          min: \"1\",\n          max: \"12\",\n          className: \"form-control\",\n          placeholder: \"Expiary Month\",\n          onChange: e => setCardExpMonth(e.target.value),\n          value: cardExpMonth\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 347,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 347,\n          columnNumber: 183\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          placeholder: \"Expiary Year\",\n          onChange: e => setCardExpYear(e.target.value),\n          value: cardExpYear\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 348,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 348,\n          columnNumber: 163\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          className: \"form-control\",\n          placeholder: \"Secret Code\",\n          onChange: e => setcardSecCode(e.target.value),\n          value: cardSecCode\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 349,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 349,\n          columnNumber: 166\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: closeAddCard,\n          className: \"btn btn-primary\",\n          children: \"Add Card\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 350,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 351,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 352,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: cardModalError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 353,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 322,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 356,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 357,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 358,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 244,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Profile, \"QASzno/AxGN8j2BTdov3JPlXUkM=\", false, function () {\n  return [useHistory];\n});\n\n_c = Profile;\n\nvar _c;\n\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"sources":["D:/MyStuff/George Brown/Year 3/2 Semester/CAPSTONE PROJECT 02/Github/CapStone-FA/FrontEnd/src/components/Dashboards/Detailed/User/Profile.js"],"names":["React","useState","useEffect","Modal","useHistory","axios","Profile","history","serverFname","setserverFname","serverLname","setserverLname","serverPhone","setserverPhone","serverEmail","setserverEmail","serverPassword","setserverPassword","userCards","setuserCards","user","localStorage","getItem","post","then","res","userData","data","first_name","last_name","phone","email","password","cardData","console","log","e","displayCards","handleCardTablesetActive","item","_id","length","map","card_holder","cardexpiryMonth","cardexpiryYear","cardnumber","cardsec","cardstatus","fname","setFname","lname","setLname","setPhone","setEmail","setPassword","repassword","setRepassword","cardHolderName","setCardHolderName","cardNumber","setCardNumber","cardExpMonth","setCardExpMonth","cardExpYear","setCardExpYear","cardSecCode","setcardSecCode","profilemodal","setProfilemodal","addcardmodal","setAddcardmodal","updateProfileModalError","setupdateProfileModalError","cardModalError","setcardModalError","closeAndUpdateProfile","preventDefault","userToUpdate","currentEmail","errors","errorReport","property","message","push","clear","openToUpdateProfile","closeAddCard","card","catch","err","openAddCard","overlay","backgroundColor","content","color","width","height","top","left","right","bottom","marginRight","transform","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport \"../User/UserStyles.css\"\r\n//Modal\r\nimport Modal from \"react-modal\"\r\nimport { useHistory } from \"react-router-dom\"\r\nimport axios from \"axios\"\r\n\r\n\r\nexport default function Profile() {\r\n    const history = useHistory()\r\n    //user information\r\n    const [serverFname, setserverFname] = useState(\"\")\r\n    const [serverLname, setserverLname] = useState(\"\")\r\n    const [serverPhone, setserverPhone] = useState(\"\")\r\n    const [serverEmail, setserverEmail] = useState(\"\")\r\n    const [serverPassword, setserverPassword] = useState(\"\")\r\n\r\n    //card information\r\n    const [userCards, setuserCards] = useState([])\r\n    //catch userdata from the server\r\n    useEffect(() => {\r\n        const user = {\r\n            \"email\": localStorage.getItem(\"user\"),\r\n        }\r\n        axios.post(\"http://localhost:8080/users/getuser\", user)\r\n            .then(res => {\r\n                const userData = res.data[0]\r\n                setserverFname(userData.first_name)\r\n                setserverLname(userData.last_name)\r\n                setserverPhone(userData.phone)\r\n                setserverEmail(userData.email)\r\n                setserverPassword(userData.password)\r\n\r\n            })\r\n    }, [serverFname, serverLname, serverPhone, serverEmail, serverPassword])\r\n\r\n\r\n    //catch user cards\r\n\r\n    useEffect(() => {\r\n        const user = {\r\n            \"email\": localStorage.getItem(\"user\"),\r\n        }\r\n        axios.post(\"http://localhost:8080/cards\", user)\r\n            .then(res => {\r\n                const cardData = res.data\r\n                console.log(cardData)\r\n                setuserCards([...cardData])\r\n            })\r\n\r\n    }, [])\r\n\r\n    useEffect((e) => {\r\n        console.log(userCards)\r\n        displayCards()\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [userCards])\r\n\r\n    function handleCardTablesetActive(item){\r\n        console.log(item._id)\r\n    }\r\n    function displayCards() {\r\n\r\n        if (userCards.length === 0) {\r\n            return (\r\n                <h1>No cards to show</h1>\r\n            )\r\n        } else {\r\n            return (\r\n                <table>\r\n                    <tr>\r\n                        <th>Card Holder</th>\r\n                        <th>Expiry Month</th>\r\n                        <th>Expiry Year</th>\r\n                        <th>Card Number</th>\r\n                        <th>Security Code</th>\r\n                        <th>Card Status</th>\r\n                        <th>Set Active</th>\r\n                        <th>Delete</th>\r\n                    </tr>\r\n                    {\r\n                        //item => <li key={item}>{item}</li>\r\n                        //item=><td>{item.card_holder}</td>\r\n                        userCards.map(\r\n                            item =>\r\n                                <tr key={item._id}>\r\n                                    <td>{item.card_holder}</td>\r\n                                    <td>{item.cardexpiryMonth}</td>\r\n                                    <td>{item.cardexpiryYear}</td>\r\n                                    <td>{item.cardnumber}</td>\r\n                                    <td>{item.cardsec}</td>\r\n                                    <td>{item.cardstatus}</td>\r\n                                    <td><button className=\"btn btn-primary\" onClick={handleCardTablesetActive(item)}>Set Active</button></td>\r\n                                    <td><button className=\"btn btn-primary\">delete</button></td>\r\n                                </tr>\r\n                        )\r\n                    }\r\n                </table>\r\n\r\n            )\r\n        }\r\n    }\r\n\r\n\r\n    //use states:\r\n    const [fname, setFname] = useState(\"\")\r\n    const [lname, setLname] = useState(\"\")\r\n    const [phone, setPhone] = useState(\"\")\r\n    const [email, setEmail] = useState(\"\")\r\n    const [password, setPassword] = useState(\"\")\r\n    const [repassword, setRepassword] = useState(\"\")\r\n\r\n    //card use state\r\n    const [cardHolderName, setCardHolderName] = useState(\"\")\r\n    const [cardNumber, setCardNumber] = useState(\"\")\r\n    const [cardExpMonth, setCardExpMonth] = useState(\"\")\r\n    const [cardExpYear, setCardExpYear] = useState(\"\")\r\n    const [cardSecCode, setcardSecCode] = useState(\"\")\r\n\r\n\r\n    //update profile MOdal\r\n    const [profilemodal, setProfilemodal] = useState(false)\r\n    const [addcardmodal, setAddcardmodal] = useState(false)\r\n\r\n    //modal Errors\r\n    const [updateProfileModalError, setupdateProfileModalError] = useState(\"\")\r\n    const [cardModalError, setcardModalError] = useState(\"\")\r\n\r\n\r\n    //Modal functionality\r\n    //Profile Modal\r\n    const closeAndUpdateProfile = (e) => {\r\n        //do update changes  !!! \r\n        e.preventDefault()\r\n        const userToUpdate = {\r\n            \"first_name\": fname,\r\n            \"last_name\": lname,\r\n            \"phone\": phone,\r\n            \"email\": email,\r\n            \"password\": password,\r\n            \"authlevel\": \"user\"\r\n        }\r\n        const currentEmail = serverEmail\r\n        if (fname === \"\" || lname === \"\" || phone === \"\" || email === \"\" || password === \"\" || repassword === \"\") {\r\n            setupdateProfileModalError(\"Please Fill all fields\")\r\n        } else {\r\n            if (password === repassword) {\r\n                //do update here\r\n                axios.post(\"http://localhost:8080/users/update\", [userToUpdate, currentEmail])\r\n                    .then(res => {\r\n                        const userData = res.data\r\n                        console.log(userData)\r\n                        let errors = res.data.errors\r\n                        let errorReport = []\r\n                        for (const property in errors) {\r\n                            console.log(`${property}: ${errors[property].message}`);\r\n                            errorReport.push(`${property}: ${errors[property].message}`)\r\n                        }\r\n                        setupdateProfileModalError(errorReport)\r\n                        if (errorReport.length === 0) {\r\n                            //history.push('/')\r\n                            setProfilemodal(false)\r\n                            localStorage.clear();\r\n                            history.push('/')\r\n                        }\r\n\r\n                    })\r\n\r\n            } else {\r\n                setupdateProfileModalError(\"Password does not match\")\r\n            }\r\n        }\r\n\r\n\r\n        //include logout action with redirection to home page\r\n    }\r\n\r\n    function openToUpdateProfile() {\r\n        //catch user information and put them in the place holder !!!\r\n        //make re-password place holder empty\r\n        setProfilemodal(true)\r\n    }\r\n\r\n\r\n    //card modal\r\n\r\n    const closeAddCard = (e) => {\r\n        //do update changes\r\n        e.preventDefault();\r\n        const card = {\r\n            cardstatus: \"Active\",\r\n            card_holder: cardHolderName,\r\n            cardnumber: cardNumber,\r\n            cardexpiryMonth: cardExpMonth,\r\n            cardexpiryYear: cardExpYear,\r\n            cardsec: cardSecCode,\r\n            email: serverEmail\r\n            // holder_email: localStorage.getItem(\"user\")\r\n            // email: \"mikeadams@fadvishor.ca\"\r\n        }\r\n        if (cardHolderName === \"\" || cardNumber === \"\" || cardExpMonth === \"\" || cardExpYear === \"\" || cardSecCode === \"\") {\r\n            setcardModalError(\"Please Fill all Fields\")\r\n        } else {\r\n            axios.post('http://localhost:8080/card', card)\r\n                .then(res => {\r\n                    console.log(res)\r\n                    let errors = res.data.errors\r\n                    let errorReport = []\r\n                    console.log(`errors are here ${errors}`)\r\n                    for (const property in errors) {\r\n                        console.log(`${property}: ${errors[property].message}`);\r\n                        errorReport.push(`${property}: ${errors[property].message}`)\r\n                    }\r\n                    setcardModalError(errorReport)\r\n                    if (errorReport.length === 0) {\r\n                        console.log(cardModalError)\r\n                        setCardHolderName(\"\")\r\n                        setCardNumber(\"\")\r\n                        setCardExpMonth(\"\")\r\n                        setCardExpYear(\"\")\r\n                        setcardSecCode(\"\")\r\n                        setAddcardmodal(false)\r\n                        // history.push('/dashboardUser')\r\n                        // window.location.reload(false)\r\n                    } else {\r\n                        setcardModalError(\"something went wrong\")\r\n                    }\r\n                }).catch(err =>\r\n                    console.log(err)\r\n                )\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    function openAddCard() {\r\n        //catch user card information and put them in place holder and hide security number\r\n\r\n\r\n        setAddcardmodal(true)\r\n    }\r\n    return (\r\n        <div>\r\n\r\n            <div className=\"profile\">\r\n                <h1>Hello from profile</h1>\r\n                <div className=\"myDiv\">\r\n                    <br />\r\n                    <br />\r\n                    <h1>{`First Name: ${serverFname}`}</h1>\r\n                    <h1>{`Last Name: ${serverLname}`}</h1>\r\n                    <h1>{`Phone: ${serverPhone}`}</h1>\r\n                    <h1>{`Email: ${serverEmail}`}</h1>\r\n                    <h1>{`Password: ${serverPassword}`}</h1>\r\n                    <button className=\"btn btn-primary\" onClick={openToUpdateProfile}>Edit Profile</button>\r\n                    <br />\r\n                    <br />\r\n                </div>\r\n                <br />\r\n                <div className=\"myDiv\">\r\n                    <h1>Cards</h1>\r\n                    <br />\r\n                    <br />\r\n                    {/* <h1>Card Holder: </h1>\r\n                    <h1>Card Number: </h1>\r\n                    <h1>Cards Expiary: </h1>\r\n                    <h1>Security Code: </h1> */}\r\n                    <div>{displayCards()}</div>\r\n                    <br />\r\n                    <br />\r\n                    <button className=\"btn btn-primary\" onClick={openAddCard}>Add Card</button>\r\n                    <br />\r\n                    <br />\r\n                </div>\r\n\r\n            </div>\r\n\r\n\r\n            {/*Modals you can change styles of the modal in */}\r\n            {/*Profile*/}\r\n            <div>\r\n                <Modal\r\n                    isOpen={profilemodal}\r\n                    onRequestClose={() => setProfilemodal(false)}\r\n                    style={\r\n                        {\r\n                            overlay: {\r\n                                backgroundColor: 'ActiveCaption',\r\n                            },\r\n                            content: {\r\n                                color: 'MenuText',\r\n                                width: '50%',\r\n                                height: '50%',\r\n                                top: '50%',\r\n                                left: '50%',\r\n                                right: 'auto',\r\n                                bottom: 'auto',\r\n                                marginRight: '-50%',\r\n                                transform: 'translate(-50%, -50%)'\r\n                            },\r\n                        }\r\n                    }\r\n                >\r\n\r\n                    <div className=\"col-sm-6 offset-sm-3\">\r\n                        <h1>Update Profile</h1>\r\n                        <input type=\"text\" className=\"form-control\" placeholder={serverFname} onChange={(e) => setFname(e.target.value)} value={fname} /><br />\r\n                        <input type=\"text\" className=\"form-control\" placeholder={serverLname} onChange={(e) => setLname(e.target.value)} value={lname} /><br />\r\n                        <input type=\"text\" className=\"form-control\" placeholder={serverPhone} onChange={(e) => setPhone(e.target.value)} value={phone} /><br />\r\n                        <input type=\"text\" className=\"form-control\" placeholder={serverEmail} onChange={(e) => setEmail(e.target.value)} value={email} /><br />\r\n                        <input type=\"password\" className=\"form-control\" placeholder={serverPassword} onChange={(e) => setPassword(e.target.value)} value={password} /><br />\r\n                        <input type=\"password\" className=\"form-control\" placeholder=\"Re-Password\" onChange={(e) => setRepassword(e.target.value)} value={repassword} /><br />\r\n                        <button onClick={closeAndUpdateProfile} className=\"btn btn-primary\">Update</button>\r\n                    </div>\r\n                    <br />\r\n                    <br />\r\n                    <h3>{updateProfileModalError}</h3>\r\n                </Modal>\r\n\r\n                {/*Card*/}\r\n                <Modal\r\n                    isOpen={addcardmodal}\r\n                    onRequestClose={() => setAddcardmodal(false)}\r\n                    style={\r\n                        {\r\n                            overlay: {\r\n                                backgroundColor: 'ActiveCaption',\r\n                            },\r\n                            content: {\r\n                                color: 'MenuText',\r\n                                width: '50%',\r\n                                height: '50%',\r\n                                top: '50%',\r\n                                left: '50%',\r\n                                right: 'auto',\r\n                                bottom: 'auto',\r\n                                marginRight: '-50%',\r\n                                transform: 'translate(-50%, -50%)'\r\n                            },\r\n                        }\r\n                    }\r\n                >\r\n                    <h1>Update Card</h1>\r\n                    <input type=\"text\" className=\"form-control\" placeholder=\"Holder Name\" onChange={(e) => setCardHolderName(e.target.value)} value={cardHolderName} /><br />\r\n                    <input type=\"text\" className=\"form-control\" placeholder=\"Card Number\" onChange={(e) => setCardNumber(e.target.value)} value={cardNumber} /><br />\r\n                    <input type=\"text\" min=\"1\" max=\"12\" className=\"form-control\" placeholder=\"Expiary Month\" onChange={(e) => setCardExpMonth(e.target.value)} value={cardExpMonth} /><br />\r\n                    <input type=\"text\" className=\"form-control\" placeholder=\"Expiary Year\" onChange={(e) => setCardExpYear(e.target.value)} value={cardExpYear} /><br />\r\n                    <input type=\"password\" className=\"form-control\" placeholder=\"Secret Code\" onChange={(e) => setcardSecCode(e.target.value)} value={cardSecCode} /><br />\r\n                    <button onClick={closeAddCard} className=\"btn btn-primary\">Add Card</button>\r\n                    <br />\r\n                    <br />\r\n                    <h3>{cardModalError}</h3>\r\n                </Modal>\r\n            </div>\r\n            <br />\r\n            <br />\r\n            <br />\r\n        </div>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}