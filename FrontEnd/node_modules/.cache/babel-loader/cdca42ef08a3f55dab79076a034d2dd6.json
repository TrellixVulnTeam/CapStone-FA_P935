{"ast":null,"code":"var _jsxFileName = \"D:\\\\MyStuff\\\\George Brown\\\\Year 3\\\\2 Semester\\\\CAPSTONE PROJECT 02\\\\Github\\\\CapStone-FA\\\\FrontEnd\\\\src\\\\components\\\\Dashboards\\\\Detailed\\\\User\\\\DashboardUserDetails.js\";\nimport React, { useState, useEffect } from 'react';\nimport axios from \"axios\";\nimport moment from 'moment';\nimport dashBoardstyle from \"../User/dashBoardstyle.css\";\nimport Spinner from 'react-bootstrap/Spinner';\nimport Table from 'react-bootstrap/Table'; // export default function DashboardUserDetails() {\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass DashboardUserDetails extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      serverEmail: \"\",\n      balanceSheetData: [],\n      isLoading: true\n    };\n  }\n\n  componentWillMount() {\n    this.renderMyData();\n  }\n\n  renderMyData() {\n    const user = {\n      \"email\": localStorage.getItem(\"user\")\n    };\n    axios.post(\"http://localhost:8080/getuserbalances\", user).then(res => {\n      this.setState({\n        serverEmail: res.data.email,\n        balanceSheetData: [...res.data],\n        isLoading: false\n      });\n      console.log(this.state.balanceSheetData[0].year);\n      return this.state.balanceSheetData;\n    });\n  }\n\n  render() {\n    if (this.state.isLoading) {\n      return (\n        /*#__PURE__*/\n        // <div className=\"fa fa-spinner fa-spin\">Loading ...</div>\n        _jsxDEV(Spinner, {\n          animation: \"border\",\n          role: \"status\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"sr-only\",\n            children: \"Loading...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 17\n        }, this)\n      );\n    } else {\n      const balanceSheetData = this.state.balanceSheetData;\n      const length = balanceSheetData.length - 1;\n      console.log(balanceSheetData);\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dashboardBody\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: `${balanceSheetData[length].year} Major Indicators`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n          className: \"main\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"square A\",\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              children: \"Cash\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n              children: `${balanceSheetData[length].Cash}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n              children: `CAD`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"square B\",\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              children: \"Accounts Payable\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n              children: `${balanceSheetData[length].Accounts_Payable}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n              children: `CAD`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"square C\",\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              children: \"Accounts Receivable\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n              children: `${balanceSheetData[length].Accounts_Receivable}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n              children: `CAD`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"square D\",\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              children: \"Accrued Expenses\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n              children: `${balanceSheetData[length].Accrued_expenses}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n              children: `CAD`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"square E\",\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              children: \"Inventory\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n              children: `${balanceSheetData[length].Inventory}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n              children: `CAD`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n          className: \"main\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"square A2\",\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              children: `5 Years Historical Data`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Table, {\n              responsive: true,\n              children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n                children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"#\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 88,\n                    columnNumber: 41\n                  }, this), balanceSheetData.map(data => /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: `${data.year}`\n                  }, data._id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 91,\n                    columnNumber: 49\n                  }, this))]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 87,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Cash\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 96,\n                    columnNumber: 41\n                  }, this), balanceSheetData.map(data => /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: `${data.Cash}`\n                  }, data._id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 99,\n                    columnNumber: 49\n                  }, this))]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 95,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Accounts Payable\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 104,\n                    columnNumber: 41\n                  }, this), balanceSheetData.map(data => /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: `${data.Accounts_Payable}`\n                  }, data._id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 107,\n                    columnNumber: 49\n                  }, this))]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 103,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Accounts Receivable\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 112,\n                    columnNumber: 41\n                  }, this), balanceSheetData.map(data => /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: `${data.Accounts_Receivable}`\n                  }, data._id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 115,\n                    columnNumber: 49\n                  }, this))]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 111,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Accrued Expenses\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 120,\n                    columnNumber: 41\n                  }, this), balanceSheetData.map(data => /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: `${data.Accrued_expenses}`\n                  }, data._id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 123,\n                    columnNumber: 49\n                  }, this))]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 119,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Inventory\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 128,\n                    columnNumber: 41\n                  }, this), balanceSheetData.map(data => /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: `${data.Inventory}`\n                  }, data._id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 131,\n                    columnNumber: 49\n                  }, this))]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 127,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this);\n    }\n  }\n\n}\n\nexport default DashboardUserDetails;\n/*\r\n<div className=\"dashboardBody\">\r\n            <div className=\"wrapper\">\r\n                <div className=\"box a\">A</div>\r\n                <div className=\"box b\">B</div>\r\n                <div className=\"box c\">C</div>\r\n                <div className=\"box a\">D</div>\r\n                <div className=\"box b\">E</div>\r\n                <div className=\"box c\">F</div>\r\n            </div>\r\n            <div className=\"wrapper\">\r\n                <div className=\"box a\">G</div>\r\n                <div className=\"box b\">H</div>\r\n                <div className=\"box c\">I</div>\r\n                <div className=\"box a\">J</div>\r\n                <div className=\"box b\">K</div>\r\n                <div className=\"box c\">L</div>\r\n            </div>\r\n            </div>\r\n\r\n*/\n// render() {\n//     return (\n//         {\n//             this.state.isLoading &&\n//                 <div className=\"fa fa-spinner fa-spin\"></div>\n//         }\n//              {\n//         !this.state.isLoading &&\n//         <div className=\"dashboardBody\" >\n//         <main className=\"main\">\n//             <div className=\"square A\">{`${this.state.balanceSheetData[0].year}`}</div>\n//             <div className=\"square B\">B</div>\n//             <div className=\"square C\">C</div>\n//             <div className=\"square D\">D</div>\n//             <div className=\"square E\">E</div>\n//         </main>\n//         <main className=\"main\">\n//             <div className=\"square A2\">A\n//                 <table>\n//                     <tbody>\n//                         <tr className=\"Horizontal-head\">\n//                             <th>1</th>\n//                             <th>22</th>\n//                             <th>33</th>\n//                             <th>44</th>\n//                             <th>55</th>\n//                         </tr>\n//                         <tr>\n//                             <th>2</th>\n//                             <td>4</td>\n//                             <td>6</td>\n//                             <td>8</td>\n//                             <td>10</td>\n//                         </tr>\n//                         <tr>\n//                             <th>2</th>\n//                             <td>4</td>\n//                             <td>6</td>\n//                             <td>8</td>\n//                             <td>10</td>\n//                         </tr>\n//                         <tr>\n//                             <th>3</th>\n//                             <td>6</td>\n//                             <td>9</td>\n//                             <td>12</td>\n//                             <td>15</td>\n//                         </tr>\n//                         <tr>\n//                             <th>4</th>\n//                             <td>8</td>\n//                             <td>12</td>\n//                             <td>16</td>\n//                             <td>20</td>\n//                         </tr>\n//                         <tr>\n//                             <th>5</th>\n//                             <td>10</td>\n//                             <td>15</td>\n//                             <td>20</td>\n//                             <td>25</td>\n//                         </tr>\n//                     </tbody>\n//                 </table>\n//             </div>\n//         </main>\n//     </div>\n//     }\n//       )\n// }\n// componentDidMount() {\n//     const user = {\n//         \"email\": localStorage.getItem(\"user\"),\n//     }\n//     axios.post(\"http://localhost:8080/getuserbalances\", user)\n//         .then(res => {\n//             this.setState({\n//                 serverEmail: res.data.email,\n//                 balanceSheetData: [...res.data]\n//             });\n//             console.log(this.state.balanceSheetData)\n//             return this.state.balanceSheetData\n//         })\n// }\n// const user = {\n//     \"email\": localStorage.getItem(\"user\"),\n// }\n// axios.post(\"http://localhost:8080/getuserbalances\", user)\n// .then(res => {\n//     setserverEmail(res.data.email)\n//     setbalanceSheetData([...res.data])\n//     console.log(balanceSheetData[0])\n// })\n// useEffect(() => {\n//     const user = {\n//         \"email\": localStorage.getItem(\"user\"),\n//     }\n//     const interval = setInterval(() => {\n//         //-----------------------------------------\n//         axios.post(\"http://localhost:8080/getuserbalances\", user)\n//             .then(res => {\n//                 setserverEmail(res.data.email)\n//                 setbalanceSheetData([...res.data])\n//                 // console.log(balanceSheetData[0])\n//             })\n//         //-----------------------------------------\n//         setSeconds(seconds => seconds + 1);\n//     }, 10000);\n//     return () => clearInterval(interval);\n//     // eslint-disable-next-line react-hooks/exhaustive-deps\n// }, [pageRefresh, serverEmail,balanceSheetData])","map":{"version":3,"sources":["D:/MyStuff/George Brown/Year 3/2 Semester/CAPSTONE PROJECT 02/Github/CapStone-FA/FrontEnd/src/components/Dashboards/Detailed/User/DashboardUserDetails.js"],"names":["React","useState","useEffect","axios","moment","dashBoardstyle","Spinner","Table","DashboardUserDetails","Component","constructor","props","state","serverEmail","balanceSheetData","isLoading","componentWillMount","renderMyData","user","localStorage","getItem","post","then","res","setState","data","email","console","log","year","render","length","Cash","Accounts_Payable","Accounts_Receivable","Accrued_expenses","Inventory","map","_id"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport axios from \"axios\"\r\nimport moment from 'moment'\r\nimport dashBoardstyle from \"../User/dashBoardstyle.css\"\r\nimport Spinner from 'react-bootstrap/Spinner'\r\n\r\nimport Table from 'react-bootstrap/Table'\r\n// export default function DashboardUserDetails() {\r\nclass DashboardUserDetails extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            serverEmail: \"\",\r\n            balanceSheetData: [],\r\n            isLoading: true\r\n        };\r\n    }\r\n    componentWillMount() {\r\n        this.renderMyData();\r\n    }\r\n    renderMyData() {\r\n        const user = {\r\n            \"email\": localStorage.getItem(\"user\"),\r\n        }\r\n        axios.post(\"http://localhost:8080/getuserbalances\", user)\r\n            .then(res => {\r\n                this.setState({\r\n                    serverEmail: res.data.email,\r\n                    balanceSheetData: [...res.data],\r\n                    isLoading: false\r\n                });\r\n                console.log(this.state.balanceSheetData[0].year)\r\n                return this.state.balanceSheetData\r\n            })\r\n    }\r\n\r\n    render() {\r\n        if (this.state.isLoading) {\r\n            return (\r\n                // <div className=\"fa fa-spinner fa-spin\">Loading ...</div>\r\n                <Spinner animation=\"border\" role=\"status\">\r\n                    <span className=\"sr-only\">Loading...</span>\r\n                </Spinner>\r\n            )\r\n        } else {\r\n            const balanceSheetData = this.state.balanceSheetData\r\n            const length = balanceSheetData.length - 1\r\n            console.log(balanceSheetData)\r\n            return (\r\n                <div className=\"dashboardBody\" >\r\n                    <h1>{`${balanceSheetData[length].year} Major Indicators`}</h1>\r\n                    <main className=\"main\">\r\n                        <div className=\"square A\">\r\n                            <h1>Cash</h1>\r\n                            <h1>{`${balanceSheetData[length].Cash}`}</h1>\r\n                            <h1>{`CAD`}</h1>\r\n                        </div>\r\n\r\n                        <div className=\"square B\">\r\n                            <h1>Accounts Payable</h1>\r\n                            <h1>{`${balanceSheetData[length].Accounts_Payable}`}</h1>\r\n                            <h1>{`CAD`}</h1>\r\n                        </div>\r\n\r\n                        <div className=\"square C\">\r\n                            <h1>Accounts Receivable</h1>\r\n                            <h1>{`${balanceSheetData[length].Accounts_Receivable}`}</h1>\r\n                            <h1>{`CAD`}</h1>\r\n                        </div>\r\n\r\n                        <div className=\"square D\">\r\n                            <h1>Accrued Expenses</h1>\r\n                            <h1>{`${balanceSheetData[length].Accrued_expenses}`}</h1>\r\n                            <h1>{`CAD`}</h1>\r\n                        </div>\r\n                        <div className=\"square E\">\r\n                            <h1>Inventory</h1>\r\n                            <h1>{`${balanceSheetData[length].Inventory}`}</h1>\r\n                            <h1>{`CAD`}</h1>\r\n                        </div>\r\n                    </main>\r\n                    <main className=\"main\">\r\n                        <div className=\"square A2\">\r\n                            <h1>{`5 Years Historical Data`}</h1>\r\n                            <Table responsive>\r\n                                <tbody>\r\n                                    <tr >\r\n                                        <th>#</th>\r\n                                        {\r\n                                            balanceSheetData.map(data =>\r\n                                                <th key={data._id}>{`${data.year}`}</th>\r\n                                            )\r\n                                        }\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <th>Cash</th>\r\n                                        {\r\n                                            balanceSheetData.map(data =>\r\n                                                <td key={data._id}>{`${data.Cash}`}</td>\r\n                                            )\r\n                                        }\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <th>Accounts Payable</th>\r\n                                        {\r\n                                            balanceSheetData.map(data =>\r\n                                                <td key={data._id}>{`${data.Accounts_Payable}`}</td>\r\n                                            )\r\n                                        }\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <th>Accounts Receivable</th>\r\n                                        {\r\n                                            balanceSheetData.map(data =>\r\n                                                <td key={data._id}>{`${data.Accounts_Receivable}`}</td>\r\n                                            )\r\n                                        }\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <th>Accrued Expenses</th>\r\n                                        {\r\n                                            balanceSheetData.map(data =>\r\n                                                <td key={data._id}>{`${data.Accrued_expenses}`}</td>\r\n                                            )\r\n                                        }\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <th>Inventory</th>\r\n                                        {\r\n                                            balanceSheetData.map(data =>\r\n                                                <td key={data._id}>{`${data.Inventory}`}</td>\r\n                                            )\r\n                                        }\r\n                                    </tr>\r\n                                </tbody>\r\n                            </Table>\r\n                        </div>\r\n                    </main>\r\n                </div>\r\n            )\r\n        }\r\n\r\n\r\n    }\r\n}\r\n\r\nexport default DashboardUserDetails\r\n/*\r\n<div className=\"dashboardBody\">\r\n            <div className=\"wrapper\">\r\n                <div className=\"box a\">A</div>\r\n                <div className=\"box b\">B</div>\r\n                <div className=\"box c\">C</div>\r\n                <div className=\"box a\">D</div>\r\n                <div className=\"box b\">E</div>\r\n                <div className=\"box c\">F</div>\r\n            </div>\r\n            <div className=\"wrapper\">\r\n                <div className=\"box a\">G</div>\r\n                <div className=\"box b\">H</div>\r\n                <div className=\"box c\">I</div>\r\n                <div className=\"box a\">J</div>\r\n                <div className=\"box b\">K</div>\r\n                <div className=\"box c\">L</div>\r\n            </div>\r\n            </div>\r\n\r\n*/\r\n\r\n\r\n\r\n\r\n\r\n// render() {\r\n//     return (\r\n//         {\r\n//             this.state.isLoading &&\r\n//                 <div className=\"fa fa-spinner fa-spin\"></div>\r\n\r\n//         }\r\n//              {\r\n//         !this.state.isLoading &&\r\n//         <div className=\"dashboardBody\" >\r\n//         <main className=\"main\">\r\n//             <div className=\"square A\">{`${this.state.balanceSheetData[0].year}`}</div>\r\n//             <div className=\"square B\">B</div>\r\n//             <div className=\"square C\">C</div>\r\n//             <div className=\"square D\">D</div>\r\n//             <div className=\"square E\">E</div>\r\n//         </main>\r\n//         <main className=\"main\">\r\n\r\n//             <div className=\"square A2\">A\r\n//                 <table>\r\n//                     <tbody>\r\n//                         <tr className=\"Horizontal-head\">\r\n//                             <th>1</th>\r\n//                             <th>22</th>\r\n//                             <th>33</th>\r\n//                             <th>44</th>\r\n//                             <th>55</th>\r\n//                         </tr>\r\n//                         <tr>\r\n//                             <th>2</th>\r\n//                             <td>4</td>\r\n//                             <td>6</td>\r\n//                             <td>8</td>\r\n//                             <td>10</td>\r\n//                         </tr>\r\n//                         <tr>\r\n//                             <th>2</th>\r\n//                             <td>4</td>\r\n//                             <td>6</td>\r\n//                             <td>8</td>\r\n//                             <td>10</td>\r\n//                         </tr>\r\n//                         <tr>\r\n//                             <th>3</th>\r\n//                             <td>6</td>\r\n//                             <td>9</td>\r\n//                             <td>12</td>\r\n//                             <td>15</td>\r\n//                         </tr>\r\n//                         <tr>\r\n//                             <th>4</th>\r\n//                             <td>8</td>\r\n//                             <td>12</td>\r\n//                             <td>16</td>\r\n//                             <td>20</td>\r\n//                         </tr>\r\n//                         <tr>\r\n//                             <th>5</th>\r\n//                             <td>10</td>\r\n//                             <td>15</td>\r\n//                             <td>20</td>\r\n//                             <td>25</td>\r\n//                         </tr>\r\n//                     </tbody>\r\n//                 </table>\r\n//             </div>\r\n\r\n//         </main>\r\n//     </div>\r\n//     }\r\n//       )\r\n// }\r\n// componentDidMount() {\r\n    //     const user = {\r\n    //         \"email\": localStorage.getItem(\"user\"),\r\n    //     }\r\n    //     axios.post(\"http://localhost:8080/getuserbalances\", user)\r\n    //         .then(res => {\r\n    //             this.setState({\r\n    //                 serverEmail: res.data.email,\r\n    //                 balanceSheetData: [...res.data]\r\n    //             });\r\n    //             console.log(this.state.balanceSheetData)\r\n    //             return this.state.balanceSheetData\r\n    //         })\r\n    // }\r\n\r\n    // const user = {\r\n    //     \"email\": localStorage.getItem(\"user\"),\r\n    // }\r\n    // axios.post(\"http://localhost:8080/getuserbalances\", user)\r\n    // .then(res => {\r\n    //     setserverEmail(res.data.email)\r\n    //     setbalanceSheetData([...res.data])\r\n    //     console.log(balanceSheetData[0])\r\n    // })\r\n\r\n\r\n\r\n    // useEffect(() => {\r\n    //     const user = {\r\n    //         \"email\": localStorage.getItem(\"user\"),\r\n    //     }\r\n    //     const interval = setInterval(() => {\r\n    //         //-----------------------------------------\r\n    //         axios.post(\"http://localhost:8080/getuserbalances\", user)\r\n    //             .then(res => {\r\n    //                 setserverEmail(res.data.email)\r\n    //                 setbalanceSheetData([...res.data])\r\n    //                 // console.log(balanceSheetData[0])\r\n    //             })\r\n    //         //-----------------------------------------\r\n    //         setSeconds(seconds => seconds + 1);\r\n    //     }, 10000);\r\n    //     return () => clearInterval(interval);\r\n\r\n    //     // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    // }, [pageRefresh, serverEmail,balanceSheetData])\r\n"]},"metadata":{},"sourceType":"module"}