{"ast":null,"code":"var _jsxFileName = \"D:\\\\MyStuff\\\\George Brown\\\\Year 3\\\\2 Semester\\\\CAPSTONE PROJECT 02\\\\Github\\\\CapStone-FA\\\\FrontEnd\\\\src\\\\components\\\\Dashboards\\\\Detailed\\\\User\\\\DashboardUserDetails.js\";\nimport React, { useState, useEffect } from 'react';\nimport axios from \"axios\";\nimport moment from 'moment';\nimport dashBoardstyle from \"../User/dashBoardstyle.css\";\nimport Spinner from 'react-bootstrap/Spinner';\nimport SecureLS from \"secure-ls\";\nimport Table from 'react-bootstrap/Table';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport { AreaChart, Area, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer, ComposedChart, Legend, Bar, Line, PieChart, Pie, Cell } from 'recharts'; // export default function DashboardUserDetails() {\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass DashboardUserDetails extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      serverEmail: \"\",\n      balanceSheetData: [],\n      isLoading: true,\n      isData: false\n    };\n  }\n\n  componentWillMount() {\n    this.renderMyData();\n  }\n\n  renderMyData() {\n    const securestorage = new SecureLS(); // securestorage.get\n\n    const user = {\n      \"email\": securestorage.get(\"user\")\n    };\n    axios.post(\"http://localhost:8080/getuserbalances\", user).then(res => {\n      console.log(res);\n\n      if (res.data.length === 0) {\n        this.setState({\n          isData: false,\n          isLoading: false\n        });\n      } else {\n        this.setState({\n          serverEmail: res.data.email,\n          balanceSheetData: [...res.data],\n          isLoading: false,\n          isData: true\n        });\n      } // console.log(this.state.balanceSheetData[0].year)\n\n\n      return this.state.balanceSheetData;\n    });\n  }\n\n  render() {\n    if (this.state.isLoading) {\n      return /*#__PURE__*/_jsxDEV(Spinner, {\n        animation: \"border\",\n        role: \"status\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"sr-only\",\n          children: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this);\n    } else {\n      if (this.state.isData) {\n        const balanceSheetData = this.state.balanceSheetData;\n        const length = balanceSheetData.length - 1;\n        const balanceSheetDataGraphdate = [];\n        balanceSheetData.map(data => balanceSheetDataGraphdate.push({\n          year: data.year,\n          Accounts_Payable: data.Accounts_Payable,\n          Cash: data.Cash,\n          Accounts_Receivable: data.Accounts_Receivable,\n          Unearned_revenue: data.Unearned_revenue,\n          Retained_Earnings: data.Retained_Earnings\n        })); // const COLORS = ['#0088FE', '#00C49F', '#FFBB28', '#FF8042'];\n        // const RADIAN = Math.PI / 180;\n        // const renderCustomizedLabel = ({ cx, cy, midAngle, innerRadius, outerRadius, percent, index }) => {\n        //     const radius = innerRadius + (outerRadius - innerRadius) * 0.6;\n        //     const x = cx + radius * Math.cos(-midAngle * RADIAN);\n        //     const y = cy + radius * Math.sin(-midAngle * RADIAN);\n        //     return (\n        //         <text x={x} y={y} fill=\"black\" textAnchor={x > cx ? 'start' : 'end'} dominantBaseline=\"central\">\n        //             {`${(percent * 100).toFixed(0)}%`}\n        //         </text>\n        //     );\n        // };\n\n        console.log(balanceSheetData);\n        console.log(balanceSheetDataGraphdate);\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"dashboardBody\",\n            children: /*#__PURE__*/_jsxDEV(Container, {\n              className: \"dashcontainer\",\n              children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n                children: `${balanceSheetData[length].year} Major Indicators`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Row, {\n                className: \"dashrow\",\n                children: [/*#__PURE__*/_jsxDEV(Col, {\n                  className: \"dashcolumn\",\n                  children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n                    children: \"Cash\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 112,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n                    children: `${balanceSheetData[length].Cash}.00`\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 113,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n                    children: `CAD`\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 114,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 111,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  className: \"dashcolumn\",\n                  children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n                    children: \"Accounts Payable\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 117,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n                    children: `${balanceSheetData[length].Accounts_Payable}.00`\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 118,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n                    children: `CAD`\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 119,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 116,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  className: \"dashcolumn\",\n                  children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n                    children: \"Accounts Receivable\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 122,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n                    children: `${balanceSheetData[length].Accounts_Receivable}.00`\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 123,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n                    children: `CAD`\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 124,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 121,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  className: \"dashcolumn\",\n                  children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n                    children: \"Accrued Expenses\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 127,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n                    children: `${balanceSheetData[length].Accrued_expenses}.00`\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 128,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n                    children: `CAD`\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 129,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 126,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  className: \"dashcolumn\",\n                  children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n                    children: \"Inventory\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 132,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n                    children: `${balanceSheetData[length].Inventory}.00`\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 133,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n                    children: `CAD`\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 134,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 131,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n                children: `5 Years Historical Data`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 137,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Row, {\n                className: \"dashrowTable\",\n                children: /*#__PURE__*/_jsxDEV(Col, {\n                  className: \"dashcolumnTable\",\n                  children: /*#__PURE__*/_jsxDEV(\"table\", {\n                    children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n                      children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n                        children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                          children: \"#\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 143,\n                          columnNumber: 53\n                        }, this), balanceSheetData.slice(balanceSheetData.length - 5, balanceSheetData.length).map(data => /*#__PURE__*/_jsxDEV(\"th\", {\n                          children: `${data.year}`\n                        }, data._id, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 146,\n                          columnNumber: 61\n                        }, this))]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 142,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                        children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                          children: \"Cash\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 151,\n                          columnNumber: 53\n                        }, this), balanceSheetData.slice(balanceSheetData.length - 5, balanceSheetData.length).map(data => /*#__PURE__*/_jsxDEV(\"td\", {\n                          children: `${data.Cash}.00`\n                        }, data._id, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 154,\n                          columnNumber: 61\n                        }, this))]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 150,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                        children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                          children: \"Accounts Payable\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 159,\n                          columnNumber: 53\n                        }, this), balanceSheetData.slice(balanceSheetData.length - 5, balanceSheetData.length).map(data => /*#__PURE__*/_jsxDEV(\"td\", {\n                          children: `${data.Accounts_Payable}.00`\n                        }, data._id, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 162,\n                          columnNumber: 61\n                        }, this))]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 158,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                        children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                          children: \"Accounts Receivable\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 167,\n                          columnNumber: 53\n                        }, this), balanceSheetData.slice(balanceSheetData.length - 5, balanceSheetData.length).map(data => /*#__PURE__*/_jsxDEV(\"td\", {\n                          children: `${data.Accounts_Receivable}.00`\n                        }, data._id, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 170,\n                          columnNumber: 61\n                        }, this))]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 166,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                        children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                          children: \"Accrued Expenses\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 175,\n                          columnNumber: 53\n                        }, this), balanceSheetData.slice(balanceSheetData.length - 5, balanceSheetData.length).map(data => /*#__PURE__*/_jsxDEV(\"td\", {\n                          children: `${data.Accrued_expenses}.00`\n                        }, data._id, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 178,\n                          columnNumber: 61\n                        }, this))]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 174,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                        children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                          children: \"Inventory\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 183,\n                          columnNumber: 53\n                        }, this), balanceSheetData.slice(balanceSheetData.length - 5, balanceSheetData.length).map(data => /*#__PURE__*/_jsxDEV(\"td\", {\n                          children: `${data.Inventory}.00`\n                        }, data._id, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 186,\n                          columnNumber: 61\n                        }, this))]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 182,\n                        columnNumber: 49\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 141,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 140,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 139,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 138,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Row, {\n                className: \"dashrowTable\",\n                children: /*#__PURE__*/_jsxDEV(Col, {\n                  className: \"dashcolumnTable\",\n                  children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                    children: `Accounts_Payable Vs Accounts_Receivable Vs Unearned_Revenue`\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 196,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n                    width: `100%`,\n                    height: 200,\n                    children: /*#__PURE__*/_jsxDEV(AreaChart, {\n                      data: balanceSheetDataGraphdate,\n                      margin: {\n                        top: 10,\n                        right: 30,\n                        left: 6,\n                        bottom: 0\n                      },\n                      children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n                        strokeDasharray: \"3 3\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 207,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n                        dataKey: \"year\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 208,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 209,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(Area, {\n                        type: \"monotone\",\n                        dataKey: \"Accounts_Payable\",\n                        stroke: \"#247bb5\",\n                        fill: \"#628dd9\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 211,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(Area, {\n                        type: \"monotone\",\n                        dataKey: \"Accounts_Receivable\",\n                        stroke: \"#247bb5\",\n                        fill: \"#636e80\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 212,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(Area, {\n                        type: \"monotone\",\n                        dataKey: \"Unearned_revenue\",\n                        stroke: \"#247bb5\",\n                        fill: \"#a6508a\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 214,\n                        columnNumber: 49\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 198,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 197,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 195,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 194,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Row, {\n                className: \"dashrowTable\",\n                children: /*#__PURE__*/_jsxDEV(Col, {\n                  className: \"dashcolumnTable\",\n                  children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                    children: `Accounts_Payable Vs Accounts_Receivable`\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 221,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(ComposedChart, {\n                    width: 1000,\n                    height: 350,\n                    data: balanceSheetDataGraphdate,\n                    children: [/*#__PURE__*/_jsxDEV(XAxis, {\n                      dataKey: \"year\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 223,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 224,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 225,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(CartesianGrid, {\n                      stroke: \"#f5f5f5\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 226,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(Bar, {\n                      dataKey: \"Accounts_Payable\",\n                      barSize: 50,\n                      fill: \"#413ea0\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 227,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(Line, {\n                      type: \"monotone\",\n                      dataKey: \"Accounts_Receivable\",\n                      stroke: \"#a6508a\",\n                      strokeWidth: 3\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 228,\n                      columnNumber: 45\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 222,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 220,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 219,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 25\n          }, this)\n        }, void 0, false);\n      } else {\n        return /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"There is no data yet ...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 21\n        }, this);\n      }\n    }\n  }\n\n}\n\nexport default DashboardUserDetails;\n6639, 1399, 5425, 3622, 2768, 5067, 1363, 2242, 2879, 3706, 4205, 1866, 5777, 1980, 3159, 4480, 6620, 5027, 4646, 2710, 5461, 2670, 5314, 2572, 5636, 4935, 765, 1650, 2035, 5273, 823, 2087, 4705, 915, 5135, 6569, 873, 1897, 1395, 1652, 1845, 5011, 1462, 3278, 3241, 3512, 5189, 4607, 5258, 2172, 1235, 3952, 2180, 4838, 5308, 6401, 839, 4642, 4326, 917, 3452, 5202, 1624, 1494, 3192;","map":{"version":3,"sources":["D:/MyStuff/George Brown/Year 3/2 Semester/CAPSTONE PROJECT 02/Github/CapStone-FA/FrontEnd/src/components/Dashboards/Detailed/User/DashboardUserDetails.js"],"names":["React","useState","useEffect","axios","moment","dashBoardstyle","Spinner","SecureLS","Table","Container","Row","Col","AreaChart","Area","XAxis","YAxis","CartesianGrid","Tooltip","ResponsiveContainer","ComposedChart","Legend","Bar","Line","PieChart","Pie","Cell","DashboardUserDetails","Component","constructor","props","state","serverEmail","balanceSheetData","isLoading","isData","componentWillMount","renderMyData","securestorage","user","get","post","then","res","console","log","data","length","setState","email","render","balanceSheetDataGraphdate","map","push","year","Accounts_Payable","Cash","Accounts_Receivable","Unearned_revenue","Retained_Earnings","Accrued_expenses","Inventory","slice","_id","top","right","left","bottom"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport axios from \"axios\"\r\nimport moment from 'moment'\r\nimport dashBoardstyle from \"../User/dashBoardstyle.css\"\r\nimport Spinner from 'react-bootstrap/Spinner'\r\nimport SecureLS from \"secure-ls\"\r\nimport Table from 'react-bootstrap/Table'\r\nimport Container from 'react-bootstrap/Container'\r\nimport Row from 'react-bootstrap/Row'\r\nimport Col from 'react-bootstrap/Col'\r\nimport {\r\n    AreaChart,\r\n    Area,\r\n    XAxis,\r\n    YAxis,\r\n    CartesianGrid,\r\n    Tooltip,\r\n    ResponsiveContainer,\r\n    ComposedChart,\r\n    Legend,\r\n    Bar,\r\n    Line,\r\n    PieChart,\r\n    Pie,\r\n    Cell\r\n\r\n} from 'recharts';\r\n// export default function DashboardUserDetails() {\r\nclass DashboardUserDetails extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            serverEmail: \"\",\r\n            balanceSheetData: [],\r\n            isLoading: true,\r\n            isData: false,\r\n        };\r\n    }\r\n    componentWillMount() {\r\n        this.renderMyData();\r\n    }\r\n    renderMyData() {\r\n        const securestorage = new SecureLS();\r\n        // securestorage.get\r\n        const user = {\r\n            \"email\": securestorage.get(\"user\"),\r\n        }\r\n        axios.post(\"http://localhost:8080/getuserbalances\", user)\r\n            .then(res => {\r\n                console.log(res)\r\n                if (res.data.length === 0) {\r\n                    this.setState({\r\n                        isData: false,\r\n                        isLoading: false,\r\n                    });\r\n                } else {\r\n                    this.setState({\r\n                        serverEmail: res.data.email,\r\n                        balanceSheetData: [...res.data],\r\n                        isLoading: false,\r\n                        isData: true\r\n                    });\r\n                }\r\n                // console.log(this.state.balanceSheetData[0].year)\r\n                return this.state.balanceSheetData\r\n            })\r\n    }\r\n\r\n    render() {\r\n        if (this.state.isLoading) {\r\n            return (\r\n                <Spinner animation=\"border\" role=\"status\">\r\n                    <span className=\"sr-only\">Loading...</span>\r\n                </Spinner>\r\n            )\r\n        } else {\r\n            if (this.state.isData) {\r\n                const balanceSheetData = this.state.balanceSheetData\r\n                const length = balanceSheetData.length - 1\r\n                const balanceSheetDataGraphdate = []\r\n                balanceSheetData.map(data =>\r\n                    balanceSheetDataGraphdate.push({\r\n                        year: data.year,\r\n                        Accounts_Payable: data.Accounts_Payable,\r\n                        Cash: data.Cash,\r\n                        Accounts_Receivable: data.Accounts_Receivable,\r\n                        Unearned_revenue: data.Unearned_revenue,\r\n                        Retained_Earnings: data.Retained_Earnings\r\n                    })\r\n                )\r\n                // const COLORS = ['#0088FE', '#00C49F', '#FFBB28', '#FF8042'];\r\n                // const RADIAN = Math.PI / 180;\r\n                // const renderCustomizedLabel = ({ cx, cy, midAngle, innerRadius, outerRadius, percent, index }) => {\r\n                //     const radius = innerRadius + (outerRadius - innerRadius) * 0.6;\r\n                //     const x = cx + radius * Math.cos(-midAngle * RADIAN);\r\n                //     const y = cy + radius * Math.sin(-midAngle * RADIAN);\r\n                //     return (\r\n                //         <text x={x} y={y} fill=\"black\" textAnchor={x > cx ? 'start' : 'end'} dominantBaseline=\"central\">\r\n                //             {`${(percent * 100).toFixed(0)}%`}\r\n                //         </text>\r\n                //     );\r\n                // };\r\n                console.log(balanceSheetData)\r\n                console.log(balanceSheetDataGraphdate)\r\n                return (\r\n                    <>\r\n                        <div className=\"dashboardBody\">\r\n                            <Container className=\"dashcontainer\">\r\n                                <h1>{`${balanceSheetData[length].year} Major Indicators`}</h1>\r\n                                <Row className=\"dashrow\">\r\n                                    <Col className=\"dashcolumn\">\r\n                                        <h1>Cash</h1>\r\n                                        <h1>{`${balanceSheetData[length].Cash}.00`}</h1>\r\n                                        <h1>{`CAD`}</h1>\r\n                                    </Col>\r\n                                    <Col className=\"dashcolumn\">\r\n                                        <h1>Accounts Payable</h1>\r\n                                        <h1>{`${balanceSheetData[length].Accounts_Payable}.00`}</h1>\r\n                                        <h1>{`CAD`}</h1>\r\n                                    </Col>\r\n                                    <Col className=\"dashcolumn\">\r\n                                        <h1>Accounts Receivable</h1>\r\n                                        <h1>{`${balanceSheetData[length].Accounts_Receivable}.00`}</h1>\r\n                                        <h1>{`CAD`}</h1>\r\n                                    </Col>\r\n                                    <Col className=\"dashcolumn\">\r\n                                        <h1>Accrued Expenses</h1>\r\n                                        <h1>{`${balanceSheetData[length].Accrued_expenses}.00`}</h1>\r\n                                        <h1>{`CAD`}</h1>\r\n                                    </Col>\r\n                                    <Col className=\"dashcolumn\">\r\n                                        <h1>Inventory</h1>\r\n                                        <h1>{`${balanceSheetData[length].Inventory}.00`}</h1>\r\n                                        <h1>{`CAD`}</h1>\r\n                                    </Col>\r\n                                </Row>\r\n                                <h1>{`5 Years Historical Data`}</h1>\r\n                                <Row className=\"dashrowTable\">\r\n                                    <Col className=\"dashcolumnTable\">\r\n                                        <table >\r\n                                            <tbody>\r\n                                                <tr >\r\n                                                    <th>#</th>\r\n                                                    {\r\n                                                        balanceSheetData.slice(balanceSheetData.length - 5, balanceSheetData.length).map(data =>\r\n                                                            <th key={data._id}>{`${data.year}`}</th>\r\n                                                        )\r\n                                                    }\r\n                                                </tr>\r\n                                                <tr>\r\n                                                    <th>Cash</th>\r\n                                                    {\r\n                                                        balanceSheetData.slice(balanceSheetData.length - 5, balanceSheetData.length).map(data =>\r\n                                                            <td key={data._id}>{`${data.Cash}.00`}</td>\r\n                                                        )\r\n                                                    }\r\n                                                </tr>\r\n                                                <tr>\r\n                                                    <th>Accounts Payable</th>\r\n                                                    {\r\n                                                        balanceSheetData.slice(balanceSheetData.length - 5, balanceSheetData.length).map(data =>\r\n                                                            <td key={data._id}>{`${data.Accounts_Payable}.00`}</td>\r\n                                                        )\r\n                                                    }\r\n                                                </tr>\r\n                                                <tr>\r\n                                                    <th>Accounts Receivable</th>\r\n                                                    {\r\n                                                        balanceSheetData.slice(balanceSheetData.length - 5, balanceSheetData.length).map(data =>\r\n                                                            <td key={data._id}>{`${data.Accounts_Receivable}.00`}</td>\r\n                                                        )\r\n                                                    }\r\n                                                </tr>\r\n                                                <tr>\r\n                                                    <th>Accrued Expenses</th>\r\n                                                    {\r\n                                                        balanceSheetData.slice(balanceSheetData.length - 5, balanceSheetData.length).map(data =>\r\n                                                            <td key={data._id}>{`${data.Accrued_expenses}.00`}</td>\r\n                                                        )\r\n                                                    }\r\n                                                </tr>\r\n                                                <tr>\r\n                                                    <th>Inventory</th>\r\n                                                    {\r\n                                                        balanceSheetData.slice(balanceSheetData.length - 5, balanceSheetData.length).map(data =>\r\n                                                            <td key={data._id}>{`${data.Inventory}.00`}</td>\r\n                                                        )\r\n                                                    }\r\n                                                </tr>\r\n                                            </tbody>\r\n                                        </table>\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row className=\"dashrowTable\">\r\n                                    <Col className=\"dashcolumnTable\">\r\n                                        <h4>{`Accounts_Payable Vs Accounts_Receivable Vs Unearned_Revenue`}</h4>\r\n                                        <ResponsiveContainer width={`100%`} height={200}>\r\n                                            <AreaChart\r\n                                                data={balanceSheetDataGraphdate}\r\n                                                margin={{\r\n                                                    top: 10,\r\n                                                    right: 30,\r\n                                                    left: 6,\r\n                                                    bottom: 0,\r\n                                                }}\r\n                                            >\r\n                                                <CartesianGrid strokeDasharray=\"3 3\" />\r\n                                                <XAxis dataKey=\"year\" />\r\n                                                <Tooltip />\r\n                                                {/* <Area type=\"monotone\" dataKey=\"Cash\" stroke=\"#8884d8\" fill=\"#8884d8\" /> */}\r\n                                                <Area type=\"monotone\" dataKey=\"Accounts_Payable\" stroke=\"#247bb5\" fill=\"#628dd9\" />\r\n                                                <Area type=\"monotone\" dataKey=\"Accounts_Receivable\" stroke=\"#247bb5\" fill=\"#636e80\" />\r\n                                                {/* <Area type=\"monotone\" dataKey=\"Retained_Earnings\" stroke=\"#247bb5\" fill=\"#294969\" /> */}\r\n                                                <Area type=\"monotone\" dataKey=\"Unearned_revenue\" stroke=\"#247bb5\" fill=\"#a6508a\" />\r\n                                            </AreaChart>\r\n                                        </ResponsiveContainer>\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row className=\"dashrowTable\">\r\n                                    <Col className=\"dashcolumnTable\">\r\n                                        <h4>{`Accounts_Payable Vs Accounts_Receivable`}</h4>\r\n                                        <ComposedChart width={1000} height={350} data={balanceSheetDataGraphdate}>\r\n                                            <XAxis dataKey=\"year\" />\r\n                                            <Tooltip />\r\n                                            <Legend />\r\n                                            <CartesianGrid stroke=\"#f5f5f5\" />\r\n                                            <Bar dataKey=\"Accounts_Payable\" barSize={50} fill=\"#413ea0\" />\r\n                                            <Line type=\"monotone\" dataKey=\"Accounts_Receivable\" stroke=\"#a6508a\" strokeWidth={3} />\r\n                                        </ComposedChart>\r\n                                    </Col>\r\n                                </Row>\r\n\r\n                            </Container>\r\n\r\n                        </div>\r\n                    </>\r\n                )\r\n            } else {\r\n                return (\r\n                    <h1>There is no data yet ...</h1>\r\n                )\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport default DashboardUserDetails\r\n\r\n\r\n6639,\r\n1399,5425,3622,2768,5067,1363,2242,2879,3706,4205,1866,5777,1980,3159,4480,6620,5027,4646,2710,5461,2670,5314,2572,5636,4935,765,1650,2035,5273,823,2087,4705,915,5135,6569,873,1897,1395,1652,1845,5011,1462,3278,3241,3512,5189,4607,5258,2172,1235,3952,2180,4838,5308,6401,839,4642,4326,917,3452,5202,1624,1494,3192"]},"metadata":{},"sourceType":"module"}