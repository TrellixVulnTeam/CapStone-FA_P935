{"ast":null,"code":"var _jsxFileName = \"D:\\\\MyStuff\\\\George Brown\\\\Year 3\\\\2 Semester\\\\CAPSTONE PROJECT 02\\\\Github\\\\CapStone-FA\\\\FrontEnd\\\\src\\\\components\\\\Dashboards\\\\Detailed\\\\User\\\\Profile.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport \"../User/UserStyles.css\"; //Modal\n\nimport Modal from \"react-modal\";\nimport { useHistory } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Profile() {\n  _s();\n\n  const history = useHistory();\n  const [serverFname, setserverFname] = useState(\"\");\n  const [serverLname, setserverLname] = useState(\"\");\n  const [serverPhone, setserverPhone] = useState(\"\");\n  const [serverEmail, setserverEmail] = useState(\"\");\n  const [serverPassword, setserverPassword] = useState(\"\"); //catch userdata from the server\n\n  useEffect(() => {\n    const user = {\n      \"email\": localStorage.getItem(\"user\")\n    };\n    axios.post(\"http://localhost:8080/users/getuser\", user).then(res => {\n      const userData = res.data[0];\n      setserverFname(userData.first_name);\n      setserverLname(userData.last_name);\n      setserverPhone(userData.phone);\n      setserverEmail(userData.email);\n      setserverPassword(userData.password);\n    });\n  }, [serverFname, serverLname, serverPhone, serverEmail, serverPassword]); //use states:\n\n  const [fname, setFname] = useState(\"\");\n  const [lname, setLname] = useState(\"\");\n  const [phone, setPhone] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [repassword, setRepassword] = useState(\"\"); //modal Error\n\n  const [updateProfileModalError, setupdateProfileModalError] = useState(\"\");\n  const [cardModalError, setcardModalError] = useState(\"\"); //card use state\n\n  const [cardHolderName, setCardHolderName] = useState(\"\");\n  const [cardNumber, setCardNumber] = useState(\"\");\n  const [cardExpMonth, setCardExpMonth] = useState(\"\");\n  const [cardExpYear, setCardExpYear] = useState(\"\");\n  const [cardSecCode, setcardSecCode] = useState(\"\"); //update profile MOdal\n\n  const [profilemodal, setProfilemodal] = useState(false);\n  const [addcardmodal, setAddcardmodal] = useState(false); //Modal functionality\n  //Profile Modal\n\n  const closeAndUpdateProfile = e => {\n    //do update changes  !!! \n    e.preventDefault();\n    const userToUpdate = {\n      \"first_name\": fname,\n      \"last_name\": lname,\n      \"phone\": phone,\n      \"email\": email,\n      \"password\": password,\n      \"authlevel\": \"user\"\n    };\n    const currentEmail = serverEmail;\n\n    if (fname === \"\" || lname === \"\" || phone === \"\" || email === \"\" || password === \"\" || repassword === \"\") {\n      setupdateProfileModalError(\"Please Fill all fields\");\n    } else {\n      if (password === repassword) {\n        //do update here\n        axios.post(\"http://localhost:8080/users/update\", [userToUpdate, currentEmail]).then(res => {\n          const userData = res.data;\n          console.log(userData);\n          let errors = res.data.errors;\n          let errorReport = [];\n\n          for (const property in errors) {\n            console.log(`${property}: ${errors[property].message}`);\n            errorReport.push(`${property}: ${errors[property].message}`);\n          }\n\n          setupdateProfileModalError(errorReport);\n\n          if (errorReport.length === 0) {\n            //history.push('/')\n            setProfilemodal(false);\n            localStorage.clear();\n            history.push('/');\n          }\n        });\n      } else {\n        setupdateProfileModalError(\"Password does not match\");\n      }\n    } //include logout action with redirection to home page\n\n  };\n\n  function openToUpdateProfile() {\n    //catch user information and put them in the place holder !!!\n    //make re-password place holder empty\n    setProfilemodal(true);\n  } //card modal\n\n\n  const closeAddCard = e => {\n    //do update changes\n    e.preventDefault();\n    const card = {\n      cardstatus: \"Active\",\n      card_holder: cardHolderName,\n      cardnumber: cardNumber,\n      cardexpiryMonth: cardExpMonth,\n      cardexpiryYear: cardExpYear,\n      cardsec: cardSecCode,\n      email: serverEmail\n    };\n\n    if (cardHolderName === \"\" || cardNumber === \"\" || cardExpMonth === \"\" || cardExpYear === \"\" || cardSecCode === \"\") {\n      setcardModalError(\"Please Fill all Fields\");\n    } else {\n      axios.post('http://localhost:8080/card', card).then(res => {\n        let errors = res.data.errors;\n        let errorReport = [];\n      });\n    }\n\n    setAddcardmodal(false);\n  };\n\n  function openAddCard() {\n    //catch user card information and put them in place holder and hide security number\n    setAddcardmodal(true);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"profile\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Hello from profile\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"myDiv\",\n        children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: `First Name: ${serverFname}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: `Last Name: ${serverLname}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: `Phone: ${serverPhone}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: `Email: ${serverEmail}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: `Password: ${serverPassword}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-primary\",\n          onClick: openToUpdateProfile,\n          children: \"Edit Profile\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"myDiv\",\n        children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Card Holder: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Card Number: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Cards Expiary: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Security Code: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-primary\",\n          onClick: openAddCard,\n          children: \"Add Card\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Modal, {\n        isOpen: profilemodal,\n        onRequestClose: () => setProfilemodal(false),\n        style: {\n          overlay: {\n            backgroundColor: 'ActiveCaption'\n          },\n          content: {\n            color: 'MenuText',\n            width: '50%',\n            height: '50%',\n            top: '50%',\n            left: '50%',\n            right: 'auto',\n            bottom: 'auto',\n            marginRight: '-50%',\n            transform: 'translate(-50%, -50%)'\n          }\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-sm-6 offset-sm-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Update Profile\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"form-control\",\n            placeholder: serverFname,\n            onChange: e => setFname(e.target.value),\n            value: fname\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 154\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"form-control\",\n            placeholder: serverLname,\n            onChange: e => setLname(e.target.value),\n            value: lname\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 154\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"form-control\",\n            placeholder: serverPhone,\n            onChange: e => setPhone(e.target.value),\n            value: phone\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 154\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"form-control\",\n            placeholder: serverEmail,\n            onChange: e => setEmail(e.target.value),\n            value: email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 154\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            className: \"form-control\",\n            placeholder: serverPassword,\n            onChange: e => setPassword(e.target.value),\n            value: password\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 167\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            className: \"form-control\",\n            placeholder: \"Re-Password\",\n            onChange: e => setRepassword(e.target.value),\n            value: repassword\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 168\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: closeAndUpdateProfile,\n            className: \"btn btn-primary\",\n            children: \"Update\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: updateProfileModalError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal, {\n        isOpen: addcardmodal,\n        onRequestClose: () => setAddcardmodal(false),\n        style: {\n          overlay: {\n            backgroundColor: 'ActiveCaption'\n          },\n          content: {\n            color: 'MenuText',\n            width: '50%',\n            height: '50%',\n            top: '50%',\n            left: '50%',\n            right: 'auto',\n            bottom: 'auto',\n            marginRight: '-50%',\n            transform: 'translate(-50%, -50%)'\n          }\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Update Card\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          placeholder: \"Holder Name\",\n          onChange: e => setCardHolderName(e.target.value),\n          value: cardHolderName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 168\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          placeholder: \"Card Number\",\n          onChange: e => setCardNumber(e.target.value),\n          value: cardNumber\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 160\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          min: \"1\",\n          max: \"12\",\n          className: \"form-control\",\n          placeholder: \"Expiary Month\",\n          onChange: e => setCardExpMonth(e.target.value),\n          value: cardExpMonth\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 183\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          placeholder: \"Expiary Year\",\n          onChange: e => setCardExpYear(e.target.value),\n          value: cardExpYear\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 163\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          className: \"form-control\",\n          placeholder: \"Secret Code\",\n          onChange: e => setcardSecCode(e.target.value),\n          value: cardSecCode\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 166\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: closeAddCard,\n          className: \"btn btn-primary\",\n          children: \"Add Card\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 152,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Profile, \"YaiQvRiUK4wkQSfu/C5B7MMG5fc=\", false, function () {\n  return [useHistory];\n});\n\n_c = Profile;\n\nvar _c;\n\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"sources":["D:/MyStuff/George Brown/Year 3/2 Semester/CAPSTONE PROJECT 02/Github/CapStone-FA/FrontEnd/src/components/Dashboards/Detailed/User/Profile.js"],"names":["React","useState","useEffect","Modal","useHistory","axios","Profile","history","serverFname","setserverFname","serverLname","setserverLname","serverPhone","setserverPhone","serverEmail","setserverEmail","serverPassword","setserverPassword","user","localStorage","getItem","post","then","res","userData","data","first_name","last_name","phone","email","password","fname","setFname","lname","setLname","setPhone","setEmail","setPassword","repassword","setRepassword","updateProfileModalError","setupdateProfileModalError","cardModalError","setcardModalError","cardHolderName","setCardHolderName","cardNumber","setCardNumber","cardExpMonth","setCardExpMonth","cardExpYear","setCardExpYear","cardSecCode","setcardSecCode","profilemodal","setProfilemodal","addcardmodal","setAddcardmodal","closeAndUpdateProfile","e","preventDefault","userToUpdate","currentEmail","console","log","errors","errorReport","property","message","push","length","clear","openToUpdateProfile","closeAddCard","card","cardstatus","card_holder","cardnumber","cardexpiryMonth","cardexpiryYear","cardsec","openAddCard","overlay","backgroundColor","content","color","width","height","top","left","right","bottom","marginRight","transform","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport \"../User/UserStyles.css\"\r\n//Modal\r\nimport Modal from \"react-modal\"\r\nimport { useHistory } from \"react-router-dom\"\r\nimport axios from \"axios\"\r\n\r\n\r\nexport default function Profile() {\r\n    const history = useHistory()\r\n    const [serverFname, setserverFname] = useState(\"\")\r\n    const [serverLname, setserverLname] = useState(\"\")\r\n    const [serverPhone, setserverPhone] = useState(\"\")\r\n    const [serverEmail, setserverEmail] = useState(\"\")\r\n    const [serverPassword, setserverPassword] = useState(\"\")\r\n\r\n    //catch userdata from the server\r\n    useEffect(() => {\r\n        const user = {\r\n            \"email\": localStorage.getItem(\"user\"),\r\n        }\r\n\r\n        axios.post(\"http://localhost:8080/users/getuser\", user)\r\n            .then(res => {\r\n                const userData = res.data[0]\r\n                setserverFname(userData.first_name)\r\n                setserverLname(userData.last_name)\r\n                setserverPhone(userData.phone)\r\n                setserverEmail(userData.email)\r\n                setserverPassword(userData.password)\r\n\r\n            })\r\n    }, [serverFname, serverLname, serverPhone, serverEmail, serverPassword])\r\n\r\n    //use states:\r\n    const [fname, setFname] = useState(\"\")\r\n    const [lname, setLname] = useState(\"\")\r\n    const [phone, setPhone] = useState(\"\")\r\n    const [email, setEmail] = useState(\"\")\r\n    const [password, setPassword] = useState(\"\")\r\n    const [repassword, setRepassword] = useState(\"\")\r\n\r\n    //modal Error\r\n    const [updateProfileModalError, setupdateProfileModalError] = useState(\"\")\r\n    const [cardModalError, setcardModalError] = useState(\"\")\r\n    //card use state\r\n    const [cardHolderName, setCardHolderName] = useState(\"\")\r\n    const [cardNumber, setCardNumber] = useState(\"\")\r\n    const [cardExpMonth, setCardExpMonth] = useState(\"\")\r\n    const [cardExpYear, setCardExpYear] = useState(\"\")\r\n    const [cardSecCode, setcardSecCode] = useState(\"\")\r\n\r\n\r\n    //update profile MOdal\r\n    const [profilemodal, setProfilemodal] = useState(false)\r\n    const [addcardmodal, setAddcardmodal] = useState(false)\r\n\r\n\r\n\r\n    //Modal functionality\r\n    //Profile Modal\r\n    const closeAndUpdateProfile = (e) => {\r\n        //do update changes  !!! \r\n        e.preventDefault()\r\n        const userToUpdate = {\r\n            \"first_name\": fname,\r\n            \"last_name\": lname,\r\n            \"phone\": phone,\r\n            \"email\": email,\r\n            \"password\": password,\r\n            \"authlevel\": \"user\"\r\n        }\r\n        const currentEmail=serverEmail\r\n        if (fname === \"\" || lname === \"\" || phone === \"\" || email === \"\" || password === \"\" || repassword === \"\") {\r\n            setupdateProfileModalError(\"Please Fill all fields\")\r\n        } else {\r\n            if (password === repassword) {\r\n                //do update here\r\n                axios.post(\"http://localhost:8080/users/update\", [userToUpdate,currentEmail])\r\n                    .then(res => {\r\n                        const userData = res.data\r\n                        console.log(userData)\r\n                        let errors = res.data.errors\r\n                        let errorReport = []\r\n                        for (const property in errors) {\r\n                            console.log(`${property}: ${errors[property].message}`);\r\n                            errorReport.push(`${property}: ${errors[property].message}`)\r\n                        }\r\n                        setupdateProfileModalError(errorReport)\r\n                        if (errorReport.length === 0) {\r\n                            //history.push('/')\r\n                            setProfilemodal(false)\r\n                            localStorage.clear();\r\n                            history.push('/')\r\n                        }\r\n\r\n                    })\r\n\r\n            } else {\r\n                setupdateProfileModalError(\"Password does not match\")\r\n            }\r\n        }\r\n\r\n\r\n        //include logout action with redirection to home page\r\n    }\r\n\r\n    function openToUpdateProfile() {\r\n        //catch user information and put them in the place holder !!!\r\n        //make re-password place holder empty\r\n        setProfilemodal(true)\r\n    }\r\n\r\n\r\n    //card modal\r\n\r\n\r\n    const closeAddCard=(e)=> {\r\n        //do update changes\r\n        e.preventDefault();\r\n        const card={\r\n            cardstatus:\"Active\",\r\n            card_holder:cardHolderName,\r\n            cardnumber:cardNumber,\r\n            cardexpiryMonth:cardExpMonth,\r\n            cardexpiryYear:cardExpYear,\r\n            cardsec:cardSecCode,\r\n            email:serverEmail\r\n          }\r\n          if(cardHolderName===\"\" || cardNumber===\"\" || cardExpMonth===\"\" || cardExpYear===\"\" ||cardSecCode===\"\"){\r\n            setcardModalError(\"Please Fill all Fields\")\r\n          }else{\r\n              axios.post('http://localhost:8080/card',card)\r\n              .then(res=>{\r\n                \r\n                let errors = res.data.errors\r\n                let errorReport = []\r\n              })\r\n          }\r\n\r\n        setAddcardmodal(false)\r\n    }\r\n\r\n    function openAddCard() {\r\n        //catch user card information and put them in place holder and hide security number\r\n\r\n\r\n        setAddcardmodal(true)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n\r\n            <div className=\"profile\">\r\n                <h1>Hello from profile</h1>\r\n                <div className=\"myDiv\">\r\n                    <br />\r\n                    <br />\r\n                    <h1>{`First Name: ${serverFname}`}</h1>\r\n                    <h1>{`Last Name: ${serverLname}`}</h1>\r\n                    <h1>{`Phone: ${serverPhone}`}</h1>\r\n                    <h1>{`Email: ${serverEmail}`}</h1>\r\n                    <h1>{`Password: ${serverPassword}`}</h1>\r\n                    <button className=\"btn btn-primary\" onClick={openToUpdateProfile}>Edit Profile</button>\r\n                    <br />\r\n                    <br />\r\n                </div>\r\n                <br />\r\n                <div className=\"myDiv\">\r\n                    <br />\r\n                    <br />\r\n                    <h1>Card Holder: </h1>\r\n                    <h1>Card Number: </h1>\r\n                    <h1>Cards Expiary: </h1>\r\n                    <h1>Security Code: </h1>\r\n                    <button className=\"btn btn-primary\" onClick={openAddCard}>Add Card</button>\r\n                    <br />\r\n                    <br />\r\n                </div>\r\n\r\n            </div>\r\n\r\n\r\n            {/*Modals you can change styles of the modal in */}\r\n            {/*Profile*/}\r\n            <div>\r\n                <Modal\r\n                    isOpen={profilemodal}\r\n                    onRequestClose={() => setProfilemodal(false)}\r\n                    style={\r\n                        {\r\n                            overlay: {\r\n                                backgroundColor: 'ActiveCaption',\r\n                            },\r\n                            content: {\r\n                                color: 'MenuText',\r\n                                width: '50%',\r\n                                height: '50%',\r\n                                top: '50%',\r\n                                left: '50%',\r\n                                right: 'auto',\r\n                                bottom: 'auto',\r\n                                marginRight: '-50%',\r\n                                transform: 'translate(-50%, -50%)'\r\n                            },\r\n                        }\r\n                    }\r\n                >\r\n\r\n                    <div className=\"col-sm-6 offset-sm-3\">\r\n                        <h1>Update Profile</h1>\r\n                        <input type=\"text\" className=\"form-control\" placeholder={serverFname} onChange={(e) => setFname(e.target.value)} value={fname} /><br />\r\n                        <input type=\"text\" className=\"form-control\" placeholder={serverLname} onChange={(e) => setLname(e.target.value)} value={lname} /><br />\r\n                        <input type=\"text\" className=\"form-control\" placeholder={serverPhone} onChange={(e) => setPhone(e.target.value)} value={phone} /><br />\r\n                        <input type=\"text\" className=\"form-control\" placeholder={serverEmail} onChange={(e) => setEmail(e.target.value)} value={email} /><br />\r\n                        <input type=\"password\" className=\"form-control\" placeholder={serverPassword} onChange={(e) => setPassword(e.target.value)} value={password} /><br />\r\n                        <input type=\"password\" className=\"form-control\" placeholder=\"Re-Password\" onChange={(e) => setRepassword(e.target.value)} value={repassword} /><br />\r\n                        <button onClick={closeAndUpdateProfile} className=\"btn btn-primary\">Update</button>\r\n                    </div>\r\n                    <br />\r\n                    <br />\r\n                    <h3>{updateProfileModalError}</h3>\r\n                </Modal>\r\n\r\n                {/*Card*/}\r\n                <Modal\r\n                    isOpen={addcardmodal}\r\n                    onRequestClose={() => setAddcardmodal(false)}\r\n                    style={\r\n                        {\r\n                            overlay: {\r\n                                backgroundColor: 'ActiveCaption',\r\n                            },\r\n                            content: {\r\n                                color: 'MenuText',\r\n                                width: '50%',\r\n                                height: '50%',\r\n                                top: '50%',\r\n                                left: '50%',\r\n                                right: 'auto',\r\n                                bottom: 'auto',\r\n                                marginRight: '-50%',\r\n                                transform: 'translate(-50%, -50%)'\r\n                            },\r\n                        }\r\n                    }\r\n                >\r\n                    <h1>Update Card</h1>\r\n                    <input type=\"text\" className=\"form-control\" placeholder=\"Holder Name\" onChange={(e) => setCardHolderName(e.target.value)} value={cardHolderName} /><br />\r\n                    <input type=\"text\" className=\"form-control\" placeholder=\"Card Number\" onChange={(e) => setCardNumber(e.target.value)} value={cardNumber} /><br />\r\n                    <input type=\"text\" min=\"1\" max=\"12\" className=\"form-control\" placeholder=\"Expiary Month\" onChange={(e) => setCardExpMonth(e.target.value)} value={cardExpMonth} /><br />\r\n                    <input type=\"text\" className=\"form-control\" placeholder=\"Expiary Year\" onChange={(e) => setCardExpYear(e.target.value)} value={cardExpYear} /><br />\r\n                    <input type=\"password\" className=\"form-control\" placeholder=\"Secret Code\" onChange={(e) => setcardSecCode(e.target.value)} value={cardSecCode} /><br />\r\n                    <button onClick={closeAddCard} className=\"btn btn-primary\">Add Card</button>\r\n                </Modal>\r\n            </div>\r\n            <br />\r\n            <br />\r\n            <br />\r\n        </div>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}