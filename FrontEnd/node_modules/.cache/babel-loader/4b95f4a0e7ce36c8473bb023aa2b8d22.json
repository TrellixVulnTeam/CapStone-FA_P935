{"ast":null,"code":"var _jsxFileName = \"D:\\\\MyStuff\\\\George Brown\\\\Year 3\\\\2 Semester\\\\CAPSTONE PROJECT 02\\\\Github\\\\CapStone-FA\\\\FrontEnd\\\\src\\\\components\\\\Dashboards\\\\Detailed\\\\User\\\\DashboardUserDetails.js\";\nimport React, { useState, useEffect } from 'react';\nimport axios from \"axios\";\nimport moment from 'moment';\nimport dashBoardstyle from \"../User/dashBoardstyle.css\";\nimport Spinner from 'react-bootstrap/Spinner';\nimport Table from 'react-bootstrap/Table';\nimport { AreaChart, Area, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer, ComposedChart, Legend, Bar, Line } from 'recharts'; // export default function DashboardUserDetails() {\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass DashboardUserDetails extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      serverEmail: \"\",\n      balanceSheetData: [],\n      isLoading: true,\n      isData: false\n    };\n  }\n\n  componentWillMount() {\n    this.renderMyData();\n  }\n\n  renderMyData() {\n    const user = {\n      \"email\": localStorage.getItem(\"user\")\n    };\n    axios.post(\"http://localhost:8080/getuserbalances\", user).then(res => {\n      console.log(res);\n\n      if (res.data.length === 0) {\n        this.setState({\n          isData: false\n        });\n      } else {\n        this.setState({\n          serverEmail: res.data.email,\n          balanceSheetData: [...res.data],\n          isLoading: false,\n          isData: true\n        });\n      } // console.log(this.state.balanceSheetData[0].year)\n\n\n      return this.state.balanceSheetData;\n    });\n  }\n\n  render() {\n    if (this.state.isLoading) {\n      return (\n        /*#__PURE__*/\n        // <div className=\"fa fa-spinner fa-spin\">Loading ...</div>\n        _jsxDEV(Spinner, {\n          animation: \"border\",\n          role: \"status\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"sr-only\",\n            children: \"Loading...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 17\n        }, this)\n      );\n    } else {\n      if (this.state.isData) {} else {}\n\n      const balanceSheetData = this.state.balanceSheetData;\n      const length = balanceSheetData.length - 1;\n      const balanceSheetDataGraphdate = [];\n      balanceSheetData.map(data => balanceSheetDataGraphdate.push({\n        year: data.year,\n        Accounts_Payable: data.Accounts_Payable,\n        Cash: data.Cash,\n        Accounts_Receivable: data.Accounts_Receivable\n      }));\n      console.log(balanceSheetData);\n      console.log(balanceSheetDataGraphdate);\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dashboardBody\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: `${balanceSheetData[length].year} Major Indicators`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n          className: \"main\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"square A\",\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              children: \"Cash\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n              children: `${balanceSheetData[length].Cash}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n              children: `CAD`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"square B\",\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              children: \"Accounts Payable\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n              children: `${balanceSheetData[length].Accounts_Payable}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n              children: `CAD`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"square C\",\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              children: \"Accounts Receivable\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n              children: `${balanceSheetData[length].Accounts_Receivable}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n              children: `CAD`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"square D\",\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              children: \"Accrued Expenses\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n              children: `${balanceSheetData[length].Accrued_expenses}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n              children: `CAD`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"square E\",\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              children: \"Inventory\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n              children: `${balanceSheetData[length].Inventory}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n              children: `CAD`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n          className: \"main\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"square A2\",\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              children: `5 Years Historical Data`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n              children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n                children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"#\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 127,\n                    columnNumber: 41\n                  }, this), balanceSheetData.map(data => /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: `${data.year}`\n                  }, data._id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 130,\n                    columnNumber: 49\n                  }, this))]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 126,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Cash\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 135,\n                    columnNumber: 41\n                  }, this), balanceSheetData.map(data => /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: `${data.Cash}`\n                  }, data._id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 138,\n                    columnNumber: 49\n                  }, this))]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 134,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Accounts Payable\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 143,\n                    columnNumber: 41\n                  }, this), balanceSheetData.map(data => /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: `${data.Accounts_Payable}`\n                  }, data._id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 146,\n                    columnNumber: 49\n                  }, this))]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 142,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Accounts Receivable\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 151,\n                    columnNumber: 41\n                  }, this), balanceSheetData.map(data => /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: `${data.Accounts_Receivable}`\n                  }, data._id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 154,\n                    columnNumber: 49\n                  }, this))]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 150,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Accrued Expenses\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 159,\n                    columnNumber: 41\n                  }, this), balanceSheetData.map(data => /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: `${data.Accrued_expenses}`\n                  }, data._id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 162,\n                    columnNumber: 49\n                  }, this))]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 158,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Inventory\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 167,\n                    columnNumber: 41\n                  }, this), balanceSheetData.map(data => /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: `${data.Inventory}`\n                  }, data._id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 170,\n                    columnNumber: 49\n                  }, this))]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 166,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 125,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n          className: \"main\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"square A2\",\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              children: `Cash`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n              width: `100%`,\n              height: 200,\n              children: /*#__PURE__*/_jsxDEV(AreaChart, {\n                data: balanceSheetDataGraphdate,\n                margin: {\n                  top: 10,\n                  right: 30,\n                  left: 6,\n                  bottom: 0\n                },\n                children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n                  strokeDasharray: \"3 3\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 192,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n                  dataKey: \"year\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 193,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 195,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Area, {\n                  type: \"monotone\",\n                  dataKey: \"Cash\",\n                  stroke: \"#8884d8\",\n                  fill: \"#8884d8\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 196,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 182,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n          className: \"main\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"square A2 Graph_Two\",\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              children: `Accounts_Payable Vs Accounts_Receivable`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(ComposedChart, {\n              width: 1500,\n              height: 350,\n              data: balanceSheetDataGraphdate,\n              children: [/*#__PURE__*/_jsxDEV(XAxis, {\n                dataKey: \"year\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 206,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 207,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 208,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(CartesianGrid, {\n                stroke: \"#f5f5f5\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 209,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Bar, {\n                dataKey: \"Accounts_Payable\",\n                barSize: 50,\n                fill: \"#413ea0\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 210,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Line, {\n                type: \"monotone\",\n                dataKey: \"Accounts_Receivable\",\n                stroke: \"#ff7300\",\n                strokeWidth: 3\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 211,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 205,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this);\n    }\n  }\n\n}\n\nexport default DashboardUserDetails;\n/*\r\nimport React, { PureComponent } from 'react';\r\nimport { AreaChart, Area, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer } from 'recharts';\r\n\r\nconst data = [\r\n  {\r\n    name: 'Page A',\r\n    uv: 4000,\r\n    pv: 2400,\r\n    amt: 2400,\r\n  },\r\n  {\r\n    name: 'Page B',\r\n    uv: 3000,\r\n    pv: 1398,\r\n    amt: 2210,\r\n  },\r\n  {\r\n    name: 'Page C',\r\n    uv: 2000,\r\n    pv: 9800,\r\n    amt: 2290,\r\n  },\r\n  {\r\n    name: 'Page D',\r\n    uv: 2780,\r\n    pv: 3908,\r\n    amt: 2000,\r\n  },\r\n  {\r\n    name: 'Page E',\r\n    uv: 1890,\r\n    pv: 4800,\r\n    amt: 2181,\r\n  },\r\n  {\r\n    name: 'Page F',\r\n    uv: 2390,\r\n    pv: 3800,\r\n    amt: 2500,\r\n  },\r\n  {\r\n    name: 'Page G',\r\n    uv: 3490,\r\n    pv: 4300,\r\n    amt: 2100,\r\n  },\r\n];\r\n\r\n\r\n  static demoUrl = 'https://codesandbox.io/s/simple-area-chart-4ujxw';\r\n\r\n  render() {\r\n    return (\r\n      <ResponsiveContainer width=\"100%\" height=\"100%\">\r\n        <AreaChart\r\n          width={500}\r\n          height={400}\r\n          data={data}\r\n          margin={{\r\n            top: 10,\r\n            right: 30,\r\n            left: 0,\r\n            bottom: 0,\r\n          }}\r\n        >\r\n          <CartesianGrid strokeDasharray=\"3 3\" />\r\n          <XAxis dataKey=\"name\" />\r\n          <YAxis />\r\n          <Tooltip />\r\n          <Area type=\"monotone\" dataKey=\"uv\" stroke=\"#8884d8\" fill=\"#8884d8\" />\r\n        </AreaChart>\r\n      </ResponsiveContainer>\r\n    );\r\n  }\r\n\r\n\r\n*/\n\n/*\r\n<div className=\"dashboardBody\">\r\n            <div className=\"wrapper\">\r\n                <div className=\"box a\">A</div>\r\n                <div className=\"box b\">B</div>\r\n                <div className=\"box c\">C</div>\r\n                <div className=\"box a\">D</div>\r\n                <div className=\"box b\">E</div>\r\n                <div className=\"box c\">F</div>\r\n            </div>\r\n            <div className=\"wrapper\">\r\n                <div className=\"box a\">G</div>\r\n                <div className=\"box b\">H</div>\r\n                <div className=\"box c\">I</div>\r\n                <div className=\"box a\">J</div>\r\n                <div className=\"box b\">K</div>\r\n                <div className=\"box c\">L</div>\r\n            </div>\r\n            </div>\r\n\r\n*/\n// render() {\n//     return (\n//         {\n//             this.state.isLoading &&\n//                 <div className=\"fa fa-spinner fa-spin\"></div>\n//         }\n//              {\n//         !this.state.isLoading &&\n//         <div className=\"dashboardBody\" >\n//         <main className=\"main\">\n//             <div className=\"square A\">{`${this.state.balanceSheetData[0].year}`}</div>\n//             <div className=\"square B\">B</div>\n//             <div className=\"square C\">C</div>\n//             <div className=\"square D\">D</div>\n//             <div className=\"square E\">E</div>\n//         </main>\n//         <main className=\"main\">\n//             <div className=\"square A2\">A\n//                 <table>\n//                     <tbody>\n//                         <tr className=\"Horizontal-head\">\n//                             <th>1</th>\n//                             <th>22</th>\n//                             <th>33</th>\n//                             <th>44</th>\n//                             <th>55</th>\n//                         </tr>\n//                         <tr>\n//                             <th>2</th>\n//                             <td>4</td>\n//                             <td>6</td>\n//                             <td>8</td>\n//                             <td>10</td>\n//                         </tr>\n//                         <tr>\n//                             <th>2</th>\n//                             <td>4</td>\n//                             <td>6</td>\n//                             <td>8</td>\n//                             <td>10</td>\n//                         </tr>\n//                         <tr>\n//                             <th>3</th>\n//                             <td>6</td>\n//                             <td>9</td>\n//                             <td>12</td>\n//                             <td>15</td>\n//                         </tr>\n//                         <tr>\n//                             <th>4</th>\n//                             <td>8</td>\n//                             <td>12</td>\n//                             <td>16</td>\n//                             <td>20</td>\n//                         </tr>\n//                         <tr>\n//                             <th>5</th>\n//                             <td>10</td>\n//                             <td>15</td>\n//                             <td>20</td>\n//                             <td>25</td>\n//                         </tr>\n//                     </tbody>\n//                 </table>\n//             </div>\n//         </main>\n//     </div>\n//     }\n//       )\n// }\n// componentDidMount() {\n//     const user = {\n//         \"email\": localStorage.getItem(\"user\"),\n//     }\n//     axios.post(\"http://localhost:8080/getuserbalances\", user)\n//         .then(res => {\n//             this.setState({\n//                 serverEmail: res.data.email,\n//                 balanceSheetData: [...res.data]\n//             });\n//             console.log(this.state.balanceSheetData)\n//             return this.state.balanceSheetData\n//         })\n// }\n// const user = {\n//     \"email\": localStorage.getItem(\"user\"),\n// }\n// axios.post(\"http://localhost:8080/getuserbalances\", user)\n// .then(res => {\n//     setserverEmail(res.data.email)\n//     setbalanceSheetData([...res.data])\n//     console.log(balanceSheetData[0])\n// })\n// useEffect(() => {\n//     const user = {\n//         \"email\": localStorage.getItem(\"user\"),\n//     }\n//     const interval = setInterval(() => {\n//         //-----------------------------------------\n//         axios.post(\"http://localhost:8080/getuserbalances\", user)\n//             .then(res => {\n//                 setserverEmail(res.data.email)\n//                 setbalanceSheetData([...res.data])\n//                 // console.log(balanceSheetData[0])\n//             })\n//         //-----------------------------------------\n//         setSeconds(seconds => seconds + 1);\n//     }, 10000);\n//     return () => clearInterval(interval);\n//     // eslint-disable-next-line react-hooks/exhaustive-deps\n// }, [pageRefresh, serverEmail,balanceSheetData])","map":{"version":3,"sources":["D:/MyStuff/George Brown/Year 3/2 Semester/CAPSTONE PROJECT 02/Github/CapStone-FA/FrontEnd/src/components/Dashboards/Detailed/User/DashboardUserDetails.js"],"names":["React","useState","useEffect","axios","moment","dashBoardstyle","Spinner","Table","AreaChart","Area","XAxis","YAxis","CartesianGrid","Tooltip","ResponsiveContainer","ComposedChart","Legend","Bar","Line","DashboardUserDetails","Component","constructor","props","state","serverEmail","balanceSheetData","isLoading","isData","componentWillMount","renderMyData","user","localStorage","getItem","post","then","res","console","log","data","length","setState","email","render","balanceSheetDataGraphdate","map","push","year","Accounts_Payable","Cash","Accounts_Receivable","Accrued_expenses","Inventory","_id","top","right","left","bottom"],"mappings":"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":["import React, { useState, useEffect } from 'react'\r\nimport axios from \"axios\"\r\nimport moment from 'moment'\r\nimport dashBoardstyle from \"../User/dashBoardstyle.css\"\r\nimport Spinner from 'react-bootstrap/Spinner'\r\n\r\nimport Table from 'react-bootstrap/Table'\r\nimport { \r\n    AreaChart, \r\n    Area, \r\n    XAxis, \r\n    YAxis, \r\n    CartesianGrid, \r\n    Tooltip, \r\n    ResponsiveContainer,\r\n    ComposedChart,\r\n    Legend,\r\n    Bar,\r\n    Line\r\n\r\n} from 'recharts';\r\n// export default function DashboardUserDetails() {\r\nclass DashboardUserDetails extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            serverEmail: \"\",\r\n            balanceSheetData: [],\r\n            isLoading: true,\r\n            isData:false,\r\n        };\r\n    }\r\n    componentWillMount() {\r\n        this.renderMyData();\r\n    }\r\n    renderMyData() {\r\n        const user = {\r\n            \"email\": localStorage.getItem(\"user\"),\r\n        }\r\n        axios.post(\"http://localhost:8080/getuserbalances\", user)\r\n            .then(res => {\r\n                console.log(res)\r\n                if(res.data.length===0){\r\n\r\n                    this.setState({\r\n                        isData:false\r\n                    }); \r\n                }else{\r\n                    this.setState({\r\n                        serverEmail: res.data.email,\r\n                        balanceSheetData: [...res.data],\r\n                        isLoading: false,\r\n                        isData:true\r\n                    });\r\n                }\r\n                // console.log(this.state.balanceSheetData[0].year)\r\n                return this.state.balanceSheetData\r\n            })\r\n    }\r\n\r\n    render() {\r\n        if (this.state.isLoading) {\r\n            return (\r\n                // <div className=\"fa fa-spinner fa-spin\">Loading ...</div>\r\n                <Spinner animation=\"border\" role=\"status\">\r\n                    <span className=\"sr-only\">Loading...</span>\r\n                </Spinner>\r\n            )\r\n        } else {\r\n            if(this.state.isData){\r\n\r\n            }else{\r\n\r\n            }\r\n            const balanceSheetData = this.state.balanceSheetData\r\n            const length = balanceSheetData.length - 1\r\n            const balanceSheetDataGraphdate = []\r\n            balanceSheetData.map(data =>\r\n                balanceSheetDataGraphdate.push({\r\n                    year: data.year,\r\n                    Accounts_Payable: data.Accounts_Payable,\r\n                    Cash: data.Cash,\r\n                    Accounts_Receivable:data.Accounts_Receivable\r\n                })\r\n            )\r\n            console.log(balanceSheetData)\r\n            console.log(balanceSheetDataGraphdate)\r\n            return (\r\n                <div className=\"dashboardBody\" >\r\n                    <h1>{`${balanceSheetData[length].year} Major Indicators`}</h1>\r\n                    <main className=\"main\">\r\n                        <div className=\"square A\">\r\n                            <h1>Cash</h1>\r\n                            <h1>{`${balanceSheetData[length].Cash}`}</h1>\r\n                            <h1>{`CAD`}</h1>\r\n                        </div>\r\n\r\n                        <div className=\"square B\">\r\n                            <h1>Accounts Payable</h1>\r\n                            <h1>{`${balanceSheetData[length].Accounts_Payable}`}</h1>\r\n                            <h1>{`CAD`}</h1>\r\n                        </div>\r\n\r\n                        <div className=\"square C\">\r\n                            <h1>Accounts Receivable</h1>\r\n                            <h1>{`${balanceSheetData[length].Accounts_Receivable}`}</h1>\r\n                            <h1>{`CAD`}</h1>\r\n                        </div>\r\n\r\n                        <div className=\"square D\">\r\n                            <h1>Accrued Expenses</h1>\r\n                            <h1>{`${balanceSheetData[length].Accrued_expenses}`}</h1>\r\n                            <h1>{`CAD`}</h1>\r\n                        </div>\r\n                        <div className=\"square E\">\r\n                            <h1>Inventory</h1>\r\n                            <h1>{`${balanceSheetData[length].Inventory}`}</h1>\r\n                            <h1>{`CAD`}</h1>\r\n                        </div>\r\n                    </main>\r\n                    <main className=\"main\">\r\n                        <div className=\"square A2\">\r\n                            <h1>{`5 Years Historical Data`}</h1>\r\n                            <table >\r\n                                <tbody>\r\n                                    <tr >\r\n                                        <th>#</th>\r\n                                        {\r\n                                            balanceSheetData.map(data =>\r\n                                                <th key={data._id}>{`${data.year}`}</th>\r\n                                            )\r\n                                        }\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <th>Cash</th>\r\n                                        {\r\n                                            balanceSheetData.map(data =>\r\n                                                <td key={data._id}>{`${data.Cash}`}</td>\r\n                                            )\r\n                                        }\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <th>Accounts Payable</th>\r\n                                        {\r\n                                            balanceSheetData.map(data =>\r\n                                                <td key={data._id}>{`${data.Accounts_Payable}`}</td>\r\n                                            )\r\n                                        }\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <th>Accounts Receivable</th>\r\n                                        {\r\n                                            balanceSheetData.map(data =>\r\n                                                <td key={data._id}>{`${data.Accounts_Receivable}`}</td>\r\n                                            )\r\n                                        }\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <th>Accrued Expenses</th>\r\n                                        {\r\n                                            balanceSheetData.map(data =>\r\n                                                <td key={data._id}>{`${data.Accrued_expenses}`}</td>\r\n                                            )\r\n                                        }\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <th>Inventory</th>\r\n                                        {\r\n                                            balanceSheetData.map(data =>\r\n                                                <td key={data._id}>{`${data.Inventory}`}</td>\r\n                                            )\r\n                                        }\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </main>\r\n                    <main className=\"main\">\r\n                        <div className=\"square A2\">\r\n                            <h1>{`Cash`}</h1>\r\n                            <ResponsiveContainer width={`100%`} height={200}>\r\n                                <AreaChart\r\n\r\n                                    data={balanceSheetDataGraphdate}\r\n                                    margin={{\r\n                                        top: 10,\r\n                                        right: 30,\r\n                                        left: 6,\r\n                                        bottom: 0,\r\n                                    }}\r\n                                >\r\n                                    <CartesianGrid strokeDasharray=\"3 3\" />\r\n                                    <XAxis dataKey=\"year\" />\r\n\r\n                                    <Tooltip />\r\n                                    <Area type=\"monotone\" dataKey=\"Cash\" stroke=\"#8884d8\" fill=\"#8884d8\" />\r\n                                    {/* <Area type=\"monotone\" dataKey=\"Accounts_Payable\" stroke=\"#247bb5\" fill=\"#b7d6eb\" /> */}\r\n                                </AreaChart>\r\n                            </ResponsiveContainer>\r\n                        </div>\r\n                    </main>\r\n                    <main className=\"main\">\r\n                        <div className=\"square A2 Graph_Two\">\r\n                            <h1>{`Accounts_Payable Vs Accounts_Receivable`}</h1>\r\n                            <ComposedChart width={1500} height={350} data={balanceSheetDataGraphdate}>\r\n                                <XAxis dataKey=\"year\" />\r\n                                <Tooltip />\r\n                                <Legend />\r\n                                <CartesianGrid stroke=\"#f5f5f5\" />\r\n                                <Bar dataKey=\"Accounts_Payable\" barSize={50} fill=\"#413ea0\" />\r\n                                <Line type=\"monotone\" dataKey=\"Accounts_Receivable\" stroke=\"#ff7300\" strokeWidth={3}/>\r\n                            </ComposedChart>\r\n                        </div>\r\n                    </main>\r\n                </div>\r\n            )\r\n        }\r\n\r\n\r\n    }\r\n}\r\n\r\nexport default DashboardUserDetails\r\n/*\r\nimport React, { PureComponent } from 'react';\r\nimport { AreaChart, Area, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer } from 'recharts';\r\n\r\nconst data = [\r\n  {\r\n    name: 'Page A',\r\n    uv: 4000,\r\n    pv: 2400,\r\n    amt: 2400,\r\n  },\r\n  {\r\n    name: 'Page B',\r\n    uv: 3000,\r\n    pv: 1398,\r\n    amt: 2210,\r\n  },\r\n  {\r\n    name: 'Page C',\r\n    uv: 2000,\r\n    pv: 9800,\r\n    amt: 2290,\r\n  },\r\n  {\r\n    name: 'Page D',\r\n    uv: 2780,\r\n    pv: 3908,\r\n    amt: 2000,\r\n  },\r\n  {\r\n    name: 'Page E',\r\n    uv: 1890,\r\n    pv: 4800,\r\n    amt: 2181,\r\n  },\r\n  {\r\n    name: 'Page F',\r\n    uv: 2390,\r\n    pv: 3800,\r\n    amt: 2500,\r\n  },\r\n  {\r\n    name: 'Page G',\r\n    uv: 3490,\r\n    pv: 4300,\r\n    amt: 2100,\r\n  },\r\n];\r\n\r\n\r\n  static demoUrl = 'https://codesandbox.io/s/simple-area-chart-4ujxw';\r\n\r\n  render() {\r\n    return (\r\n      <ResponsiveContainer width=\"100%\" height=\"100%\">\r\n        <AreaChart\r\n          width={500}\r\n          height={400}\r\n          data={data}\r\n          margin={{\r\n            top: 10,\r\n            right: 30,\r\n            left: 0,\r\n            bottom: 0,\r\n          }}\r\n        >\r\n          <CartesianGrid strokeDasharray=\"3 3\" />\r\n          <XAxis dataKey=\"name\" />\r\n          <YAxis />\r\n          <Tooltip />\r\n          <Area type=\"monotone\" dataKey=\"uv\" stroke=\"#8884d8\" fill=\"#8884d8\" />\r\n        </AreaChart>\r\n      </ResponsiveContainer>\r\n    );\r\n  }\r\n\r\n\r\n*/\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/*\r\n<div className=\"dashboardBody\">\r\n            <div className=\"wrapper\">\r\n                <div className=\"box a\">A</div>\r\n                <div className=\"box b\">B</div>\r\n                <div className=\"box c\">C</div>\r\n                <div className=\"box a\">D</div>\r\n                <div className=\"box b\">E</div>\r\n                <div className=\"box c\">F</div>\r\n            </div>\r\n            <div className=\"wrapper\">\r\n                <div className=\"box a\">G</div>\r\n                <div className=\"box b\">H</div>\r\n                <div className=\"box c\">I</div>\r\n                <div className=\"box a\">J</div>\r\n                <div className=\"box b\">K</div>\r\n                <div className=\"box c\">L</div>\r\n            </div>\r\n            </div>\r\n\r\n*/\r\n\r\n\r\n\r\n\r\n\r\n// render() {\r\n//     return (\r\n//         {\r\n//             this.state.isLoading &&\r\n//                 <div className=\"fa fa-spinner fa-spin\"></div>\r\n\r\n//         }\r\n//              {\r\n//         !this.state.isLoading &&\r\n//         <div className=\"dashboardBody\" >\r\n//         <main className=\"main\">\r\n//             <div className=\"square A\">{`${this.state.balanceSheetData[0].year}`}</div>\r\n//             <div className=\"square B\">B</div>\r\n//             <div className=\"square C\">C</div>\r\n//             <div className=\"square D\">D</div>\r\n//             <div className=\"square E\">E</div>\r\n//         </main>\r\n//         <main className=\"main\">\r\n\r\n//             <div className=\"square A2\">A\r\n//                 <table>\r\n//                     <tbody>\r\n//                         <tr className=\"Horizontal-head\">\r\n//                             <th>1</th>\r\n//                             <th>22</th>\r\n//                             <th>33</th>\r\n//                             <th>44</th>\r\n//                             <th>55</th>\r\n//                         </tr>\r\n//                         <tr>\r\n//                             <th>2</th>\r\n//                             <td>4</td>\r\n//                             <td>6</td>\r\n//                             <td>8</td>\r\n//                             <td>10</td>\r\n//                         </tr>\r\n//                         <tr>\r\n//                             <th>2</th>\r\n//                             <td>4</td>\r\n//                             <td>6</td>\r\n//                             <td>8</td>\r\n//                             <td>10</td>\r\n//                         </tr>\r\n//                         <tr>\r\n//                             <th>3</th>\r\n//                             <td>6</td>\r\n//                             <td>9</td>\r\n//                             <td>12</td>\r\n//                             <td>15</td>\r\n//                         </tr>\r\n//                         <tr>\r\n//                             <th>4</th>\r\n//                             <td>8</td>\r\n//                             <td>12</td>\r\n//                             <td>16</td>\r\n//                             <td>20</td>\r\n//                         </tr>\r\n//                         <tr>\r\n//                             <th>5</th>\r\n//                             <td>10</td>\r\n//                             <td>15</td>\r\n//                             <td>20</td>\r\n//                             <td>25</td>\r\n//                         </tr>\r\n//                     </tbody>\r\n//                 </table>\r\n//             </div>\r\n\r\n//         </main>\r\n//     </div>\r\n//     }\r\n//       )\r\n// }\r\n// componentDidMount() {\r\n    //     const user = {\r\n    //         \"email\": localStorage.getItem(\"user\"),\r\n    //     }\r\n    //     axios.post(\"http://localhost:8080/getuserbalances\", user)\r\n    //         .then(res => {\r\n    //             this.setState({\r\n    //                 serverEmail: res.data.email,\r\n    //                 balanceSheetData: [...res.data]\r\n    //             });\r\n    //             console.log(this.state.balanceSheetData)\r\n    //             return this.state.balanceSheetData\r\n    //         })\r\n    // }\r\n\r\n    // const user = {\r\n    //     \"email\": localStorage.getItem(\"user\"),\r\n    // }\r\n    // axios.post(\"http://localhost:8080/getuserbalances\", user)\r\n    // .then(res => {\r\n    //     setserverEmail(res.data.email)\r\n    //     setbalanceSheetData([...res.data])\r\n    //     console.log(balanceSheetData[0])\r\n    // })\r\n\r\n\r\n\r\n    // useEffect(() => {\r\n    //     const user = {\r\n    //         \"email\": localStorage.getItem(\"user\"),\r\n    //     }\r\n    //     const interval = setInterval(() => {\r\n    //         //-----------------------------------------\r\n    //         axios.post(\"http://localhost:8080/getuserbalances\", user)\r\n    //             .then(res => {\r\n    //                 setserverEmail(res.data.email)\r\n    //                 setbalanceSheetData([...res.data])\r\n    //                 // console.log(balanceSheetData[0])\r\n    //             })\r\n    //         //-----------------------------------------\r\n    //         setSeconds(seconds => seconds + 1);\r\n    //     }, 10000);\r\n    //     return () => clearInterval(interval);\r\n\r\n    //     // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    // }, [pageRefresh, serverEmail,balanceSheetData])\r\n"]},"metadata":{},"sourceType":"module"}