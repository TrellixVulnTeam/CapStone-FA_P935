{"ast":null,"code":"var _jsxFileName = \"D:\\\\MyStuff\\\\George Brown\\\\Year 3\\\\2 Semester\\\\CAPSTONE PROJECT 02\\\\Github\\\\CapStone-FA\\\\FrontEnd\\\\src\\\\components\\\\Dashboards\\\\Detailed\\\\User\\\\DashboardUserDetails.js\";\nimport React, { useState, useEffect } from 'react';\nimport axios from \"axios\";\nimport moment from 'moment';\nimport dashBoardstyle from \"../User/dashBoardstyle.css\";\nimport Spinner from 'react-bootstrap/Spinner';\nimport Table from 'react-bootstrap/Table';\nimport { AreaChart, Area, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer, ComposedChart, Legend, Bar, Line, PieChart, Pie, Cell } from 'recharts'; // export default function DashboardUserDetails() {\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass DashboardUserDetails extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      serverEmail: \"\",\n      balanceSheetData: [],\n      isLoading: true,\n      isData: false\n    };\n  }\n\n  componentWillMount() {\n    this.renderMyData();\n  }\n\n  renderMyData() {\n    const user = {\n      \"email\": localStorage.getItem(\"user\")\n    };\n    axios.post(\"http://localhost:8080/getuserbalances\", user).then(res => {\n      console.log(res);\n\n      if (res.data.length === 0) {\n        this.setState({\n          isData: false,\n          isLoading: false\n        });\n      } else {\n        this.setState({\n          serverEmail: res.data.email,\n          balanceSheetData: [...res.data],\n          isLoading: false,\n          isData: true\n        });\n      } // console.log(this.state.balanceSheetData[0].year)\n\n\n      return this.state.balanceSheetData;\n    });\n  }\n\n  render() {\n    if (this.state.isLoading) {\n      return /*#__PURE__*/_jsxDEV(Spinner, {\n        animation: \"border\",\n        role: \"status\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"sr-only\",\n          children: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this);\n    } else {\n      if (this.state.isData) {\n        const balanceSheetData = this.state.balanceSheetData;\n        const length = balanceSheetData.length - 1;\n        const balanceSheetDataGraphdate = [];\n        balanceSheetData.map(data => balanceSheetDataGraphdate.push({\n          year: data.year,\n          Accounts_Payable: data.Accounts_Payable,\n          Cash: data.Cash,\n          Accounts_Receivable: data.Accounts_Receivable,\n          Unearned_revenue: data.Unearned_revenue,\n          Retained_Earnings: data.Retained_Earnings\n        }));\n        const COLORS = ['#0088FE', '#00C49F', '#FFBB28', '#FF8042'];\n        const RADIAN = Math.PI / 180;\n\n        const renderCustomizedLabel = ({\n          cx,\n          cy,\n          midAngle,\n          innerRadius,\n          outerRadius,\n          percent,\n          index\n        }) => {\n          const radius = innerRadius + (outerRadius - innerRadius) * 0.6;\n          const x = cx + radius * Math.cos(-midAngle * RADIAN);\n          const y = cy + radius * Math.sin(-midAngle * RADIAN);\n          return /*#__PURE__*/_jsxDEV(\"text\", {\n            x: x,\n            y: y,\n            fill: \"black\",\n            textAnchor: x > cx ? 'start' : 'end',\n            dominantBaseline: \"central\",\n            children: `${(percent * 100).toFixed(0)}%`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 25\n          }, this);\n        };\n\n        console.log(balanceSheetData);\n        console.log(balanceSheetDataGraphdate);\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dashboardBody\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: `${balanceSheetData[length].year} Major Indicators`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n            className: \"main\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"square A\",\n              children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n                children: \"Cash\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 106,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n                children: `${balanceSheetData[length].Cash}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n                children: `CAD`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"square B\",\n              children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n                children: \"Accounts Payable\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n                children: `${balanceSheetData[length].Accounts_Payable}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n                children: `CAD`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 113,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"square C\",\n              children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n                children: \"Accounts Receivable\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 116,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n                children: `${balanceSheetData[length].Accounts_Receivable}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 117,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n                children: `CAD`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 118,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"square D\",\n              children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n                children: \"Accrued Expenses\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 121,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n                children: `${balanceSheetData[length].Accrued_expenses}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 122,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n                children: `CAD`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 123,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"square E\",\n              children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n                children: \"Inventory\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 126,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n                children: `${balanceSheetData[length].Inventory}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 127,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n                children: `CAD`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 128,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n            className: \"main\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"square A2\",\n              children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n                children: `5 Years Historical Data`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 133,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n                children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                      children: \"#\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 137,\n                      columnNumber: 45\n                    }, this), balanceSheetData.slice(balanceSheetData.length - 5, balanceSheetData.length).map(data => /*#__PURE__*/_jsxDEV(\"th\", {\n                      children: `${data.year}`\n                    }, data._id, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 140,\n                      columnNumber: 53\n                    }, this))]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 136,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                      children: \"Cash\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 145,\n                      columnNumber: 45\n                    }, this), balanceSheetData.slice(balanceSheetData.length - 5, balanceSheetData.length).map(data => /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: `${data.Cash}`\n                    }, data._id, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 148,\n                      columnNumber: 53\n                    }, this))]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 144,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                      children: \"Accounts Payable\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 153,\n                      columnNumber: 45\n                    }, this), balanceSheetData.slice(balanceSheetData.length - 5, balanceSheetData.length).map(data => /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: `${data.Accounts_Payable}`\n                    }, data._id, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 156,\n                      columnNumber: 53\n                    }, this))]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 152,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                      children: \"Accounts Receivable\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 161,\n                      columnNumber: 45\n                    }, this), balanceSheetData.slice(balanceSheetData.length - 5, balanceSheetData.length).map(data => /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: `${data.Accounts_Receivable}`\n                    }, data._id, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 164,\n                      columnNumber: 53\n                    }, this))]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 160,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                      children: \"Accrued Expenses\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 169,\n                      columnNumber: 45\n                    }, this), balanceSheetData.slice(balanceSheetData.length - 5, balanceSheetData.length).map(data => /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: `${data.Accrued_expenses}`\n                    }, data._id, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 172,\n                      columnNumber: 53\n                    }, this))]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 168,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                      children: \"Inventory\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 177,\n                      columnNumber: 45\n                    }, this), balanceSheetData.slice(balanceSheetData.length - 5, balanceSheetData.length).map(data => /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: `${data.Inventory}`\n                    }, data._id, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 180,\n                      columnNumber: 53\n                    }, this))]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 176,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 135,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 134,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n            className: \"main\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"square A2\",\n              children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n                children: `Accounts_Payable Vs Accounts_Receivable Vs Unearned_Revenue`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 190,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n                width: `100%`,\n                height: 200,\n                children: /*#__PURE__*/_jsxDEV(AreaChart, {\n                  data: balanceSheetDataGraphdate,\n                  margin: {\n                    top: 10,\n                    right: 30,\n                    left: 6,\n                    bottom: 0\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n                    strokeDasharray: \"3 3\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 201,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n                    dataKey: \"year\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 202,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 203,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Area, {\n                    type: \"monotone\",\n                    dataKey: \"Accounts_Payable\",\n                    stroke: \"#247bb5\",\n                    fill: \"#628dd9\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 205,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Area, {\n                    type: \"monotone\",\n                    dataKey: \"Accounts_Receivable\",\n                    stroke: \"#247bb5\",\n                    fill: \"#636e80\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 206,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Area, {\n                    type: \"monotone\",\n                    dataKey: \"Unearned_revenue\",\n                    stroke: \"#247bb5\",\n                    fill: \"#a6508a\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 208,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 192,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 191,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n            className: \"main\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"square A2 Graph_Two\",\n              children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n                children: `Accounts_Payable Vs Accounts_Receivable`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 215,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(ComposedChart, {\n                width: 1500,\n                height: 350,\n                data: balanceSheetDataGraphdate,\n                children: [/*#__PURE__*/_jsxDEV(XAxis, {\n                  dataKey: \"year\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 217,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 218,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 219,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(CartesianGrid, {\n                  stroke: \"#f5f5f5\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 220,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Bar, {\n                  dataKey: \"Accounts_Payable\",\n                  barSize: 50,\n                  fill: \"#413ea0\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 221,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Line, {\n                  type: \"monotone\",\n                  dataKey: \"Accounts_Receivable\",\n                  stroke: \"#ff7300\",\n                  strokeWidth: 3\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 222,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 216,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 214,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n            className: \"main\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"square A\",\n              children: /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n                width: \"100%\",\n                height: \"100%\",\n                children: /*#__PURE__*/_jsxDEV(PieChart, {\n                  width: 100,\n                  height: 100,\n                  children: /*#__PURE__*/_jsxDEV(Pie, {\n                    data: balanceSheetDataGraphdate,\n                    dataKey: \"Cash\",\n                    cx: \"50%\",\n                    cy: \"50%\",\n                    innerRadius: 15,\n                    outerRadius: 50,\n                    fill: \"#628dd9\",\n                    label: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 231,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 229,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 228,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 227,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"square B\",\n              children: /*#__PURE__*/_jsxDEV(PieChart, {\n                width: 350,\n                height: 350,\n                onMouseEnter: this.onPieEnter,\n                children: /*#__PURE__*/_jsxDEV(Pie, {\n                  data: balanceSheetDataGraphdate,\n                  cx: 120,\n                  cy: 120,\n                  innerRadius: 50,\n                  outerRadius: 90,\n                  fill: \"#8884d8\",\n                  paddingAngle: 3,\n                  dataKey: \"Cash\",\n                  children: balanceSheetDataGraphdate.map((entry, index) => /*#__PURE__*/_jsxDEV(Cell, {\n                    fill: COLORS[index % COLORS.length]\n                  }, `cell-${index}`, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 248,\n                    columnNumber: 45\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 237,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 236,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"square C\",\n              children: /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n                width: \"100%\",\n                height: \"100%\",\n                children: /*#__PURE__*/_jsxDEV(PieChart, {\n                  width: 350,\n                  height: 350,\n                  children: /*#__PURE__*/_jsxDEV(Pie, {\n                    data: balanceSheetDataGraphdate,\n                    cx: \"50%\",\n                    cy: \"50%\",\n                    labelLine: false,\n                    label: renderCustomizedLabel,\n                    outerRadius: 120,\n                    fill: \"#8884d8\",\n                    dataKey: \"Accounts_Receivable\",\n                    children: balanceSheetDataGraphdate.map((entry, index) => /*#__PURE__*/_jsxDEV(Cell, {\n                      fill: COLORS[index % COLORS.length]\n                    }, `cell-${index}`, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 268,\n                      columnNumber: 49\n                    }, this))\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 257,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 256,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 255,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 254,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 21\n        }, this);\n      } else {\n        return /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"There is no data yet ...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 21\n        }, this);\n      }\n    }\n  }\n\n}\n\nexport default DashboardUserDetails;\n/*\r\nimport React, { PureComponent } from 'react';\r\nimport { AreaChart, Area, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer } from 'recharts';\r\n\r\nconst data = [\r\n  {\r\n    name: 'Page A',\r\n    uv: 4000,\r\n    pv: 2400,\r\n    amt: 2400,\r\n  },\r\n  {\r\n    name: 'Page B',\r\n    uv: 3000,\r\n    pv: 1398,\r\n    amt: 2210,\r\n  },\r\n  {\r\n    name: 'Page C',\r\n    uv: 2000,\r\n    pv: 9800,\r\n    amt: 2290,\r\n  },\r\n  {\r\n    name: 'Page D',\r\n    uv: 2780,\r\n    pv: 3908,\r\n    amt: 2000,\r\n  },\r\n  {\r\n    name: 'Page E',\r\n    uv: 1890,\r\n    pv: 4800,\r\n    amt: 2181,\r\n  },\r\n  {\r\n    name: 'Page F',\r\n    uv: 2390,\r\n    pv: 3800,\r\n    amt: 2500,\r\n  },\r\n  {\r\n    name: 'Page G',\r\n    uv: 3490,\r\n    pv: 4300,\r\n    amt: 2100,\r\n  },\r\n];\r\n\r\n\r\n  static demoUrl = 'https://codesandbox.io/s/simple-area-chart-4ujxw';\r\n\r\n  render() {\r\n    return (\r\n      <ResponsiveContainer width=\"100%\" height=\"100%\">\r\n        <AreaChart\r\n          width={500}\r\n          height={400}\r\n          data={data}\r\n          margin={{\r\n            top: 10,\r\n            right: 30,\r\n            left: 0,\r\n            bottom: 0,\r\n          }}\r\n        >\r\n          <CartesianGrid strokeDasharray=\"3 3\" />\r\n          <XAxis dataKey=\"name\" />\r\n          <YAxis />\r\n          <Tooltip />\r\n          <Area type=\"monotone\" dataKey=\"uv\" stroke=\"#8884d8\" fill=\"#8884d8\" />\r\n        </AreaChart>\r\n      </ResponsiveContainer>\r\n    );\r\n  }\r\n\r\n\r\n*/\n\n/*\r\n<div className=\"dashboardBody\">\r\n            <div className=\"wrapper\">\r\n                <div className=\"box a\">A</div>\r\n                <div className=\"box b\">B</div>\r\n                <div className=\"box c\">C</div>\r\n                <div className=\"box a\">D</div>\r\n                <div className=\"box b\">E</div>\r\n                <div className=\"box c\">F</div>\r\n            </div>\r\n            <div className=\"wrapper\">\r\n                <div className=\"box a\">G</div>\r\n                <div className=\"box b\">H</div>\r\n                <div className=\"box c\">I</div>\r\n                <div className=\"box a\">J</div>\r\n                <div className=\"box b\">K</div>\r\n                <div className=\"box c\">L</div>\r\n            </div>\r\n            </div>\r\n\r\n*/\n// render() {\n//     return (\n//         {\n//             this.state.isLoading &&\n//                 <div className=\"fa fa-spinner fa-spin\"></div>\n//         }\n//              {\n//         !this.state.isLoading &&\n//         <div className=\"dashboardBody\" >\n//         <main className=\"main\">\n//             <div className=\"square A\">{`${this.state.balanceSheetData[0].year}`}</div>\n//             <div className=\"square B\">B</div>\n//             <div className=\"square C\">C</div>\n//             <div className=\"square D\">D</div>\n//             <div className=\"square E\">E</div>\n//         </main>\n//         <main className=\"main\">\n//             <div className=\"square A2\">A\n//                 <table>\n//                     <tbody>\n//                         <tr className=\"Horizontal-head\">\n//                             <th>1</th>\n//                             <th>22</th>\n//                             <th>33</th>\n//                             <th>44</th>\n//                             <th>55</th>\n//                         </tr>\n//                         <tr>\n//                             <th>2</th>\n//                             <td>4</td>\n//                             <td>6</td>\n//                             <td>8</td>\n//                             <td>10</td>\n//                         </tr>\n//                         <tr>\n//                             <th>2</th>\n//                             <td>4</td>\n//                             <td>6</td>\n//                             <td>8</td>\n//                             <td>10</td>\n//                         </tr>\n//                         <tr>\n//                             <th>3</th>\n//                             <td>6</td>\n//                             <td>9</td>\n//                             <td>12</td>\n//                             <td>15</td>\n//                         </tr>\n//                         <tr>\n//                             <th>4</th>\n//                             <td>8</td>\n//                             <td>12</td>\n//                             <td>16</td>\n//                             <td>20</td>\n//                         </tr>\n//                         <tr>\n//                             <th>5</th>\n//                             <td>10</td>\n//                             <td>15</td>\n//                             <td>20</td>\n//                             <td>25</td>\n//                         </tr>\n//                     </tbody>\n//                 </table>\n//             </div>\n//         </main>\n//     </div>\n//     }\n//       )\n// }\n// componentDidMount() {\n//     const user = {\n//         \"email\": localStorage.getItem(\"user\"),\n//     }\n//     axios.post(\"http://localhost:8080/getuserbalances\", user)\n//         .then(res => {\n//             this.setState({\n//                 serverEmail: res.data.email,\n//                 balanceSheetData: [...res.data]\n//             });\n//             console.log(this.state.balanceSheetData)\n//             return this.state.balanceSheetData\n//         })\n// }\n// const user = {\n//     \"email\": localStorage.getItem(\"user\"),\n// }\n// axios.post(\"http://localhost:8080/getuserbalances\", user)\n// .then(res => {\n//     setserverEmail(res.data.email)\n//     setbalanceSheetData([...res.data])\n//     console.log(balanceSheetData[0])\n// })\n// useEffect(() => {\n//     const user = {\n//         \"email\": localStorage.getItem(\"user\"),\n//     }\n//     const interval = setInterval(() => {\n//         //-----------------------------------------\n//         axios.post(\"http://localhost:8080/getuserbalances\", user)\n//             .then(res => {\n//                 setserverEmail(res.data.email)\n//                 setbalanceSheetData([...res.data])\n//                 // console.log(balanceSheetData[0])\n//             })\n//         //-----------------------------------------\n//         setSeconds(seconds => seconds + 1);\n//     }, 10000);\n//     return () => clearInterval(interval);\n//     // eslint-disable-next-line react-hooks/exhaustive-deps\n// }, [pageRefresh, serverEmail,balanceSheetData])","map":{"version":3,"sources":["D:/MyStuff/George Brown/Year 3/2 Semester/CAPSTONE PROJECT 02/Github/CapStone-FA/FrontEnd/src/components/Dashboards/Detailed/User/DashboardUserDetails.js"],"names":["React","useState","useEffect","axios","moment","dashBoardstyle","Spinner","Table","AreaChart","Area","XAxis","YAxis","CartesianGrid","Tooltip","ResponsiveContainer","ComposedChart","Legend","Bar","Line","PieChart","Pie","Cell","DashboardUserDetails","Component","constructor","props","state","serverEmail","balanceSheetData","isLoading","isData","componentWillMount","renderMyData","user","localStorage","getItem","post","then","res","console","log","data","length","setState","email","render","balanceSheetDataGraphdate","map","push","year","Accounts_Payable","Cash","Accounts_Receivable","Unearned_revenue","Retained_Earnings","COLORS","RADIAN","Math","PI","renderCustomizedLabel","cx","cy","midAngle","innerRadius","outerRadius","percent","index","radius","x","cos","y","sin","toFixed","Accrued_expenses","Inventory","slice","_id","top","right","left","bottom","onPieEnter","entry"],"mappings":"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":["import React, { useState, useEffect } from 'react'\r\nimport axios from \"axios\"\r\nimport moment from 'moment'\r\nimport dashBoardstyle from \"../User/dashBoardstyle.css\"\r\nimport Spinner from 'react-bootstrap/Spinner'\r\n\r\nimport Table from 'react-bootstrap/Table'\r\nimport {\r\n    AreaChart,\r\n    Area,\r\n    XAxis,\r\n    YAxis,\r\n    CartesianGrid,\r\n    Tooltip,\r\n    ResponsiveContainer,\r\n    ComposedChart,\r\n    Legend,\r\n    Bar,\r\n    Line,\r\n    PieChart,\r\n    Pie,\r\n    Cell\r\n\r\n} from 'recharts';\r\n// export default function DashboardUserDetails() {\r\nclass DashboardUserDetails extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            serverEmail: \"\",\r\n            balanceSheetData: [],\r\n            isLoading: true,\r\n            isData: false,\r\n        };\r\n    }\r\n    componentWillMount() {\r\n        this.renderMyData();\r\n    }\r\n    renderMyData() {\r\n        const user = {\r\n            \"email\": localStorage.getItem(\"user\"),\r\n        }\r\n        axios.post(\"http://localhost:8080/getuserbalances\", user)\r\n            .then(res => {\r\n                console.log(res)\r\n                if (res.data.length === 0) {\r\n                    this.setState({\r\n                        isData: false,\r\n                        isLoading: false,\r\n                    });\r\n                } else {\r\n                    this.setState({\r\n                        serverEmail: res.data.email,\r\n                        balanceSheetData: [...res.data],\r\n                        isLoading: false,\r\n                        isData: true\r\n                    });\r\n                }\r\n                // console.log(this.state.balanceSheetData[0].year)\r\n                return this.state.balanceSheetData\r\n            })\r\n    }\r\n\r\n    render() {\r\n        if (this.state.isLoading) {\r\n            return (\r\n                <Spinner animation=\"border\" role=\"status\">\r\n                    <span className=\"sr-only\">Loading...</span>\r\n                </Spinner>\r\n            )\r\n        } else {\r\n            if (this.state.isData) {\r\n                const balanceSheetData = this.state.balanceSheetData\r\n                const length = balanceSheetData.length - 1\r\n                const balanceSheetDataGraphdate = []\r\n                balanceSheetData.map(data =>\r\n                    balanceSheetDataGraphdate.push({\r\n                        year: data.year,\r\n                        Accounts_Payable: data.Accounts_Payable,\r\n                        Cash: data.Cash,\r\n                        Accounts_Receivable: data.Accounts_Receivable,\r\n                        Unearned_revenue: data.Unearned_revenue,\r\n                        Retained_Earnings: data.Retained_Earnings\r\n\r\n                    })\r\n                )\r\n                const COLORS = ['#0088FE', '#00C49F', '#FFBB28', '#FF8042'];\r\n                const RADIAN = Math.PI / 180;\r\n                const renderCustomizedLabel = ({ cx, cy, midAngle, innerRadius, outerRadius, percent, index }) => {\r\n                    const radius = innerRadius + (outerRadius - innerRadius) * 0.6;\r\n                    const x = cx + radius * Math.cos(-midAngle * RADIAN);\r\n                    const y = cy + radius * Math.sin(-midAngle * RADIAN);\r\n                    return (\r\n                        <text x={x} y={y} fill=\"black\" textAnchor={x > cx ? 'start' : 'end'} dominantBaseline=\"central\">\r\n                            {`${(percent * 100).toFixed(0)}%`}\r\n                        </text>\r\n                    );\r\n                };\r\n                console.log(balanceSheetData)\r\n                console.log(balanceSheetDataGraphdate)\r\n                return (\r\n                    <div className=\"dashboardBody\" >\r\n                        <h1>{`${balanceSheetData[length].year} Major Indicators`}</h1>\r\n                        <main className=\"main\">\r\n                            <div className=\"square A\">\r\n                                <h1>Cash</h1>\r\n                                <h1>{`${balanceSheetData[length].Cash}`}</h1>\r\n                                <h1>{`CAD`}</h1>\r\n                            </div>\r\n                            <div className=\"square B\">\r\n                                <h1>Accounts Payable</h1>\r\n                                <h1>{`${balanceSheetData[length].Accounts_Payable}`}</h1>\r\n                                <h1>{`CAD`}</h1>\r\n                            </div>\r\n                            <div className=\"square C\">\r\n                                <h1>Accounts Receivable</h1>\r\n                                <h1>{`${balanceSheetData[length].Accounts_Receivable}`}</h1>\r\n                                <h1>{`CAD`}</h1>\r\n                            </div>\r\n                            <div className=\"square D\">\r\n                                <h1>Accrued Expenses</h1>\r\n                                <h1>{`${balanceSheetData[length].Accrued_expenses}`}</h1>\r\n                                <h1>{`CAD`}</h1>\r\n                            </div>\r\n                            <div className=\"square E\">\r\n                                <h1>Inventory</h1>\r\n                                <h1>{`${balanceSheetData[length].Inventory}`}</h1>\r\n                                <h1>{`CAD`}</h1>\r\n                            </div>\r\n                        </main>\r\n                        <main className=\"main\">\r\n                            <div className=\"square A2\">\r\n                                <h1>{`5 Years Historical Data`}</h1>\r\n                                <table >\r\n                                    <tbody>\r\n                                        <tr >\r\n                                            <th>#</th>\r\n                                            {\r\n                                                balanceSheetData.slice(balanceSheetData.length - 5, balanceSheetData.length).map(data =>\r\n                                                    <th key={data._id}>{`${data.year}`}</th>\r\n                                                )\r\n                                            }\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <th>Cash</th>\r\n                                            {\r\n                                                balanceSheetData.slice(balanceSheetData.length - 5, balanceSheetData.length).map(data =>\r\n                                                    <td key={data._id}>{`${data.Cash}`}</td>\r\n                                                )\r\n                                            }\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <th>Accounts Payable</th>\r\n                                            {\r\n                                                balanceSheetData.slice(balanceSheetData.length - 5, balanceSheetData.length).map(data =>\r\n                                                    <td key={data._id}>{`${data.Accounts_Payable}`}</td>\r\n                                                )\r\n                                            }\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <th>Accounts Receivable</th>\r\n                                            {\r\n                                                balanceSheetData.slice(balanceSheetData.length - 5, balanceSheetData.length).map(data =>\r\n                                                    <td key={data._id}>{`${data.Accounts_Receivable}`}</td>\r\n                                                )\r\n                                            }\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <th>Accrued Expenses</th>\r\n                                            {\r\n                                                balanceSheetData.slice(balanceSheetData.length - 5, balanceSheetData.length).map(data =>\r\n                                                    <td key={data._id}>{`${data.Accrued_expenses}`}</td>\r\n                                                )\r\n                                            }\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <th>Inventory</th>\r\n                                            {\r\n                                                balanceSheetData.slice(balanceSheetData.length - 5, balanceSheetData.length).map(data =>\r\n                                                    <td key={data._id}>{`${data.Inventory}`}</td>\r\n                                                )\r\n                                            }\r\n                                        </tr>\r\n                                    </tbody>\r\n                                </table>\r\n                            </div>\r\n                        </main>\r\n                        <main className=\"main\">\r\n                            <div className=\"square A2\">\r\n                                <h1>{`Accounts_Payable Vs Accounts_Receivable Vs Unearned_Revenue`}</h1>\r\n                                <ResponsiveContainer width={`100%`} height={200}>\r\n                                    <AreaChart\r\n                                        data={balanceSheetDataGraphdate}\r\n                                        margin={{\r\n                                            top: 10,\r\n                                            right: 30,\r\n                                            left: 6,\r\n                                            bottom: 0,\r\n                                        }}\r\n                                    >\r\n                                        <CartesianGrid strokeDasharray=\"3 3\" />\r\n                                        <XAxis dataKey=\"year\" />\r\n                                        <Tooltip />\r\n                                        {/* <Area type=\"monotone\" dataKey=\"Cash\" stroke=\"#8884d8\" fill=\"#8884d8\" /> */}\r\n                                        <Area type=\"monotone\" dataKey=\"Accounts_Payable\" stroke=\"#247bb5\" fill=\"#628dd9\" />\r\n                                        <Area type=\"monotone\" dataKey=\"Accounts_Receivable\" stroke=\"#247bb5\" fill=\"#636e80\" />\r\n                                        {/* <Area type=\"monotone\" dataKey=\"Retained_Earnings\" stroke=\"#247bb5\" fill=\"#294969\" /> */}\r\n                                        <Area type=\"monotone\" dataKey=\"Unearned_revenue\" stroke=\"#247bb5\" fill=\"#a6508a\" />\r\n                                    </AreaChart>\r\n                                </ResponsiveContainer>\r\n                            </div>\r\n                        </main>\r\n                        <main className=\"main\">\r\n                            <div className=\"square A2 Graph_Two\">\r\n                                <h1>{`Accounts_Payable Vs Accounts_Receivable`}</h1>\r\n                                <ComposedChart width={1500} height={350} data={balanceSheetDataGraphdate}>\r\n                                    <XAxis dataKey=\"year\" />\r\n                                    <Tooltip />\r\n                                    <Legend />\r\n                                    <CartesianGrid stroke=\"#f5f5f5\" />\r\n                                    <Bar dataKey=\"Accounts_Payable\" barSize={50} fill=\"#413ea0\" />\r\n                                    <Line type=\"monotone\" dataKey=\"Accounts_Receivable\" stroke=\"#ff7300\" strokeWidth={3} />\r\n                                </ComposedChart>\r\n                            </div>\r\n                        </main>\r\n                        <main className=\"main\">\r\n                            <div className=\"square A\">\r\n                                <ResponsiveContainer width=\"100%\" height=\"100%\">\r\n                                    <PieChart width={100} height={100}>\r\n                                        {/* <Pie data={balanceSheetDataGraphdate} dataKey=\"Cash\" cx=\"50%\" cy=\"50%\" outerRadius={50} fill=\"#8884d8\" /> */}\r\n                                        <Pie data={balanceSheetDataGraphdate} dataKey=\"Cash\" cx=\"50%\" cy=\"50%\" innerRadius={15} outerRadius={50} fill=\"#628dd9\" label />\r\n                                    </PieChart>\r\n                                </ResponsiveContainer>\r\n                            </div>\r\n                            <div className=\"square B\">\r\n                                <PieChart width={350} height={350} onMouseEnter={this.onPieEnter}>\r\n                                    <Pie\r\n                                        data={balanceSheetDataGraphdate}\r\n                                        cx={120}\r\n                                        cy={120}\r\n                                        innerRadius={50}\r\n                                        outerRadius={90}\r\n                                        fill=\"#8884d8\"\r\n                                        paddingAngle={3}\r\n                                        dataKey=\"Cash\"\r\n                                    >\r\n                                        {balanceSheetDataGraphdate.map((entry, index) => (\r\n                                            <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />\r\n                                        ))}\r\n                                    </Pie>\r\n\r\n                                </PieChart>\r\n                            </div>\r\n                            <div className=\"square C\">\r\n                                <ResponsiveContainer width=\"100%\" height=\"100%\">\r\n                                    <PieChart width={350} height={350}>\r\n                                        <Pie\r\n                                            data={balanceSheetDataGraphdate}\r\n                                            cx=\"50%\"\r\n                                            cy=\"50%\"\r\n                                            labelLine={false}\r\n                                            label={renderCustomizedLabel}\r\n                                            outerRadius={120}\r\n                                            fill=\"#8884d8\"\r\n                                            dataKey=\"Accounts_Receivable\"\r\n                                        >\r\n                                            {balanceSheetDataGraphdate.map((entry, index) => (\r\n                                                <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />\r\n                                            ))}\r\n                                        </Pie>\r\n                                    </PieChart>\r\n                                </ResponsiveContainer>\r\n                            </div>\r\n                        </main>\r\n                    </div>\r\n                )\r\n            } else {\r\n                return (\r\n                    <h1>There is no data yet ...</h1>\r\n                )\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport default DashboardUserDetails\r\n/*\r\nimport React, { PureComponent } from 'react';\r\nimport { AreaChart, Area, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer } from 'recharts';\r\n\r\nconst data = [\r\n  {\r\n    name: 'Page A',\r\n    uv: 4000,\r\n    pv: 2400,\r\n    amt: 2400,\r\n  },\r\n  {\r\n    name: 'Page B',\r\n    uv: 3000,\r\n    pv: 1398,\r\n    amt: 2210,\r\n  },\r\n  {\r\n    name: 'Page C',\r\n    uv: 2000,\r\n    pv: 9800,\r\n    amt: 2290,\r\n  },\r\n  {\r\n    name: 'Page D',\r\n    uv: 2780,\r\n    pv: 3908,\r\n    amt: 2000,\r\n  },\r\n  {\r\n    name: 'Page E',\r\n    uv: 1890,\r\n    pv: 4800,\r\n    amt: 2181,\r\n  },\r\n  {\r\n    name: 'Page F',\r\n    uv: 2390,\r\n    pv: 3800,\r\n    amt: 2500,\r\n  },\r\n  {\r\n    name: 'Page G',\r\n    uv: 3490,\r\n    pv: 4300,\r\n    amt: 2100,\r\n  },\r\n];\r\n\r\n\r\n  static demoUrl = 'https://codesandbox.io/s/simple-area-chart-4ujxw';\r\n\r\n  render() {\r\n    return (\r\n      <ResponsiveContainer width=\"100%\" height=\"100%\">\r\n        <AreaChart\r\n          width={500}\r\n          height={400}\r\n          data={data}\r\n          margin={{\r\n            top: 10,\r\n            right: 30,\r\n            left: 0,\r\n            bottom: 0,\r\n          }}\r\n        >\r\n          <CartesianGrid strokeDasharray=\"3 3\" />\r\n          <XAxis dataKey=\"name\" />\r\n          <YAxis />\r\n          <Tooltip />\r\n          <Area type=\"monotone\" dataKey=\"uv\" stroke=\"#8884d8\" fill=\"#8884d8\" />\r\n        </AreaChart>\r\n      </ResponsiveContainer>\r\n    );\r\n  }\r\n\r\n\r\n*/\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/*\r\n<div className=\"dashboardBody\">\r\n            <div className=\"wrapper\">\r\n                <div className=\"box a\">A</div>\r\n                <div className=\"box b\">B</div>\r\n                <div className=\"box c\">C</div>\r\n                <div className=\"box a\">D</div>\r\n                <div className=\"box b\">E</div>\r\n                <div className=\"box c\">F</div>\r\n            </div>\r\n            <div className=\"wrapper\">\r\n                <div className=\"box a\">G</div>\r\n                <div className=\"box b\">H</div>\r\n                <div className=\"box c\">I</div>\r\n                <div className=\"box a\">J</div>\r\n                <div className=\"box b\">K</div>\r\n                <div className=\"box c\">L</div>\r\n            </div>\r\n            </div>\r\n\r\n*/\r\n\r\n\r\n\r\n\r\n\r\n// render() {\r\n//     return (\r\n//         {\r\n//             this.state.isLoading &&\r\n//                 <div className=\"fa fa-spinner fa-spin\"></div>\r\n\r\n//         }\r\n//              {\r\n//         !this.state.isLoading &&\r\n//         <div className=\"dashboardBody\" >\r\n//         <main className=\"main\">\r\n//             <div className=\"square A\">{`${this.state.balanceSheetData[0].year}`}</div>\r\n//             <div className=\"square B\">B</div>\r\n//             <div className=\"square C\">C</div>\r\n//             <div className=\"square D\">D</div>\r\n//             <div className=\"square E\">E</div>\r\n//         </main>\r\n//         <main className=\"main\">\r\n\r\n//             <div className=\"square A2\">A\r\n//                 <table>\r\n//                     <tbody>\r\n//                         <tr className=\"Horizontal-head\">\r\n//                             <th>1</th>\r\n//                             <th>22</th>\r\n//                             <th>33</th>\r\n//                             <th>44</th>\r\n//                             <th>55</th>\r\n//                         </tr>\r\n//                         <tr>\r\n//                             <th>2</th>\r\n//                             <td>4</td>\r\n//                             <td>6</td>\r\n//                             <td>8</td>\r\n//                             <td>10</td>\r\n//                         </tr>\r\n//                         <tr>\r\n//                             <th>2</th>\r\n//                             <td>4</td>\r\n//                             <td>6</td>\r\n//                             <td>8</td>\r\n//                             <td>10</td>\r\n//                         </tr>\r\n//                         <tr>\r\n//                             <th>3</th>\r\n//                             <td>6</td>\r\n//                             <td>9</td>\r\n//                             <td>12</td>\r\n//                             <td>15</td>\r\n//                         </tr>\r\n//                         <tr>\r\n//                             <th>4</th>\r\n//                             <td>8</td>\r\n//                             <td>12</td>\r\n//                             <td>16</td>\r\n//                             <td>20</td>\r\n//                         </tr>\r\n//                         <tr>\r\n//                             <th>5</th>\r\n//                             <td>10</td>\r\n//                             <td>15</td>\r\n//                             <td>20</td>\r\n//                             <td>25</td>\r\n//                         </tr>\r\n//                     </tbody>\r\n//                 </table>\r\n//             </div>\r\n\r\n//         </main>\r\n//     </div>\r\n//     }\r\n//       )\r\n// }\r\n// componentDidMount() {\r\n    //     const user = {\r\n    //         \"email\": localStorage.getItem(\"user\"),\r\n    //     }\r\n    //     axios.post(\"http://localhost:8080/getuserbalances\", user)\r\n    //         .then(res => {\r\n    //             this.setState({\r\n    //                 serverEmail: res.data.email,\r\n    //                 balanceSheetData: [...res.data]\r\n    //             });\r\n    //             console.log(this.state.balanceSheetData)\r\n    //             return this.state.balanceSheetData\r\n    //         })\r\n    // }\r\n\r\n    // const user = {\r\n    //     \"email\": localStorage.getItem(\"user\"),\r\n    // }\r\n    // axios.post(\"http://localhost:8080/getuserbalances\", user)\r\n    // .then(res => {\r\n    //     setserverEmail(res.data.email)\r\n    //     setbalanceSheetData([...res.data])\r\n    //     console.log(balanceSheetData[0])\r\n    // })\r\n\r\n\r\n\r\n    // useEffect(() => {\r\n    //     const user = {\r\n    //         \"email\": localStorage.getItem(\"user\"),\r\n    //     }\r\n    //     const interval = setInterval(() => {\r\n    //         //-----------------------------------------\r\n    //         axios.post(\"http://localhost:8080/getuserbalances\", user)\r\n    //             .then(res => {\r\n    //                 setserverEmail(res.data.email)\r\n    //                 setbalanceSheetData([...res.data])\r\n    //                 // console.log(balanceSheetData[0])\r\n    //             })\r\n    //         //-----------------------------------------\r\n    //         setSeconds(seconds => seconds + 1);\r\n    //     }, 10000);\r\n    //     return () => clearInterval(interval);\r\n\r\n    //     // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    // }, [pageRefresh, serverEmail,balanceSheetData])\r\n"]},"metadata":{},"sourceType":"module"}